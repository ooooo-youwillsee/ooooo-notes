<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>docker - Tag - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/docker/</link><description>docker - Tag - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Wed, 15 Mar 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/docker/" rel="self" type="application/rss+xml"/><item><title>h2 数据库使用</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/h2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 15 Mar 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/h2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</guid><description><![CDATA[怎么使用 h2 数据库。 1. 引入依赖 1 2 3 4 dependencies { api(&#39;p6spy:p6spy&#39;) api(&#39;com.h2database:h2&#39;) } 2. 以内存的方式使用 1 2 3 4 5 # spring boot 配置 spring: datasource: driverClassName: com.p6spy.engine.spy.P6SpyDriver url: jdbc:p6spy:h2:mem:test;DB_CLOSE_DELAY=1000 3. 以进程的方式使用 1 2 3 4 5 6 7 8 # 启动 h2 数]]></description></item><item><title>docker 存储驱动</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%AD%98%E5%82%A8%E9%A9%B1%E5%8A%A8/</link><pubDate>Tue, 24 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%AD%98%E5%82%A8%E9%A9%B1%E5%8A%A8/</guid><description>1. aufs 存储驱动 Ubuntu 22.04 LTS 不支持 aufs 文件系统 参考： ubuntu官方文档 2. overlay2 存储驱动 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # creat dir mkdir lower upper work mnt # mount lower upper work to mnt mount -t overlay -o</description></item><item><title>docker 单主机网络</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%8D%95%E4%B8%BB%E6%9C%BA%E7%BD%91%E8%B7%AF/</link><pubDate>Fri, 20 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%8D%95%E4%B8%BB%E6%9C%BA%E7%BD%91%E8%B7%AF/</guid><description>这篇文章主要简述 docker 中的 bridge 网络驱动是如何工作的。 1. 测试一，veth1 (ns1) &amp;mdash; veth2 (ns2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # create ns1,</description></item><item><title>设置 docker 代理</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</link><pubDate>Sun, 18 Dec 2022 09:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</guid><description><![CDATA[1. 配置 docker 代理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 创建配置目录 mkdir -p /etc/systemd/system/docker.service.d # 创建配置文件 vim /etc/systemd/system/docker.service.d/http-proxy.conf # 配置文件内容 [Service] Environment=&#34;HTTP_PROXY=http://ooooo:10800&#34; Environment=&#34;HTTPS_PROXY=http://ooooo:10800&#34; # 重启 docker systemctl daemon-reload &amp;&amp; systemctl restart docker # 查看配置是否生效]]></description></item><item><title>在 docker 上安装 nfs</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%9C%A8-docker-%E4%B8%8A%E5%AE%89%E8%A3%85-nfs/</link><pubDate>Tue, 01 Mar 2022 18:32:22 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%9C%A8-docker-%E4%B8%8A%E5%AE%89%E8%A3%85-nfs/</guid><description>install nfs in docker 1. create share directory used by nfs 1 mkdir -p /home/ooooo/shared/nfs 2. create exports.txt used by nfs This the exports.txt mainly used to mount dir (path in the container ) and permission. for example: It indicates read only for all ip. 1 2 vim /home/ooooo/exports.txt /home/ooooo/shared/nfs *(ro,no_subtree_check) 3. execute docker command 1 2 3 4 5 6 7 8 9 10 11 12 13 docker run</description></item></channel></rss>