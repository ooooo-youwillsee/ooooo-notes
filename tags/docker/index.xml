<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>docker - Tag - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/docker/</link><description>docker - Tag - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Sun, 18 Dec 2022 09:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/docker/" rel="self" type="application/rss+xml"/><item><title>设置 docker 代理</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</link><pubDate>Sun, 18 Dec 2022 09:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</guid><description><![CDATA[1. 配置 docker 代理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 创建配置目录 mkdir -p /etc/systemd/system/docker.service.d # 创建配置文件 vim /etc/systemd/system/docker.service.d/http-proxy.conf # 配置文件内容 [Service] Environment=&#34;HTTP_PROXY=http://ooooo:10800&#34; Environment=&#34;HTTPS_PROXY=http://ooooo:10800&#34; # 重启 docker systemctl daemon-reload &amp;&amp; systemctl restart docker # 查看配置是否生效]]></description></item><item><title>在 docker 上安装 nfs</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%9C%A8-docker-%E4%B8%8A%E5%AE%89%E8%A3%85-nfs/</link><pubDate>Tue, 01 Mar 2022 18:32:22 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%9C%A8-docker-%E4%B8%8A%E5%AE%89%E8%A3%85-nfs/</guid><description>install nfs in docker 1. create share directory used by nfs 1 mkdir -p /home/ooooo/shared/nfs 2. create exports.txt used by nfs This the exports.txt mainly used to mount dir (path in the container ) and permission. for example: It indicates read only for all ip. 1 2 vim /home/ooooo/exports.txt /home/ooooo/shared/nfs *(ro,no_subtree_check) 3. execute docker command 1 2 3 4 5 6 7 8 9 10 11 12 13 docker run</description></item></channel></rss>