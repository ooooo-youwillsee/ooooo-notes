<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>activiti - Tag - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/activiti/</link><description>activiti - Tag - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Fri, 13 Oct 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/activiti/" rel="self" type="application/rss+xml"/><item><title>源码分析 activiti agenda 流转节点</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-agenda-%E6%B5%81%E8%BD%AC%E8%8A%82%E7%82%B9/</link><pubDate>Fri, 13 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-agenda-%E6%B5%81%E8%BD%AC%E8%8A%82%E7%82%B9/</guid><description>activiti 基于 8.0.0 版本 Agenda 类是工作流框架中非常重要的类，它控制着节点怎么流转。这部分的代码比较复杂，建议多调试几遍。下面的代码实际上是一个闭环，从开始的</description></item><item><title>源码分析 activiti 启动流程</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Thu, 12 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid><description>activiti 基于 8.0.0 版本 启动流程的方法有多个，这里以 startProcessInstanceByKey 为入口来分析 启动流程 源码位置: org.activiti.engine.impl.RuntimeServiceImpl#startProcessInstanceByKey 1 2 3 4 5 // 启动流程 public ProcessInstance startProcessInstanceByKey(String processDefinitionKey) { // 执行 StartProcessInstanceCmd return commandExecutor.execute(new StartProcessInstanceCmd&amp;lt;ProcessInstance&amp;gt;(processDefinitionKey, null, null, null)); } 源码位置: org.activiti.engine.impl.cmd.StartProcessInstanceCmd#execute 1</description></item><item><title>源码分析 activiti 解析流程</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B/</link><pubDate>Wed, 11 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E8%A7%A3%E6%9E%90%E6%B5%81%E7%A8%8B/</guid><description>activiti 基于 8.0.0 版本 每次部署新的流程，必定会解析流程来检查文件是否正确，并将 xml 元素映射到 java 对象上。 解析流程 源码位置: org.activiti.engine.impl.bpmn.deployer.ParsedDeploymentBuilder#createBpmnParseFromResource 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15</description></item><item><title>源码分析 activiti 部署流程</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</link><pubDate>Tue, 10 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</guid><description>activiti 基于 8.0.0 版本 部署流程 源码位置: org.activiti.engine.impl.repository.DeploymentBuilderImpl#deploy 1 2 3 4 5 6 7 8 9 10 // 部署流程 public Deployment deploy() { return repositoryService.deploy(this); } // org.activiti.engine.impl.RepositoryServiceImpl#deploy public Deployment deploy(DeploymentBuilderImpl deploymentBuilder) { // 执行 DeployCmd, 最终会执行 DeployCmd#execute 方法 return commandExecutor.execute(new DeployCmd&amp;lt;Deployment&amp;gt;(deploymentBuilder)); } 源码位置: org.activiti.engine.impl.cmd.DeployCmd#execute 1 2 3</description></item><item><title>源码分析 activiti 集成 spring</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%9B%86%E6%88%90-spring/</link><pubDate>Mon, 09 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%9B%86%E6%88%90-spring/</guid><description>activiti 基于 8.0.0 版本 在大多数情况下，activiti 都会与 spring boot 框架一起使用，所以这一节就来介绍 activiti 是如何集成 spring 的。 activitiProperties 配置 配置类: org.activiti.spring.boot.ActivitiProperties java 1 2 3 4 5 6 7 8 9</description></item><item><title>搭建 activiti 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-activiti-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Sun, 08 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-activiti-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>activiti 基于 8.0.0 版本 下载源码和编译 1 2 3 git clone git@github.com:Activiti/Activiti.git mvn clean package -DskipTests 运行示例程序 在源码中有模块 activiti-examples/activiti-api-bas</description></item></channel></rss>