<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码分析 Redisson 系列 - 标签 - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-redisson-%E7%B3%BB%E5%88%97/</link><description>源码分析 Redisson 系列 - 标签 | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (线偶)</managingEditor><webMaster>297872913@qq.com (线偶)</webMaster><lastBuildDate>Mon, 08 Apr 2024 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-redisson-%E7%B3%BB%E5%88%97/" rel="self" type="application/rss+xml"/><item><title>01 分布式锁 RedissonLock</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/01-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81-redissonlock/</link><pubDate>Mon, 08 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/01-%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81-redissonlock/</guid><description><![CDATA[redisson 基于 org.redisson:redisson-spring-data-27:3.27.2 版本 在 java 中，操作 redis 一般都会选择 redisson 框架, 我们需要了解常用功能的实现原理。 使用方式 1 2 3 4 5 6 7 8 9 10 11 @Test void testDistributedLock() { RLock lock = redissonClient.getLock(&#34;lock&#34;); try { lock.lock(); ThreadUtil.sleep(30, TimeUnit.SECONDS); System.out.println(&#34;xxx&#34;); } finally]]></description></item></channel></rss>