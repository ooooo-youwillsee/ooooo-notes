<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码分析 Nacos 系列 - 标签 - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-%E7%B3%BB%E5%88%97/</link><description>源码分析 Nacos 系列 - 标签 | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (线偶)</managingEditor><webMaster>297872913@qq.com (线偶)</webMaster><lastBuildDate>Sat, 16 Sep 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-%E7%B3%BB%E5%88%97/" rel="self" type="application/rss+xml"/><item><title>21 client 订阅配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/21-client-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 16 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/21-client-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 这里的 client 是指 nacos SDK，也就是模块 nacos-client. 添加订阅者源码位置: com.alibaba.nacos.client.config.NacosConfigService#addListener 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // 添加监听器 @Override public void addListener(String</description></item><item><title>20 client 获取配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/20-client-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 15 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/20-client-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 这里的 client 是指 nacos SDK，也就是模块 nacos-client. 获取配置源码位置: com.alibaba.nacos.client.config.NacosConfigService#getConfig 1 2 3 4 5 // 获取配置 @Override public String getConfig(String dataId, String group, long timeoutMs) throws NacosException { return getConfigInner(namespace, dataId, group, timeoutMs); } 源码位置: com.alibaba.nacos.client.config.NacosConfigService#getConfigInner 1 2 3</description></item><item><title>19 订阅配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/19-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</link><pubDate>Thu, 14 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/19-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，订阅配置分为 http长轮询 和 grpc 两种方式。 http 长轮询源码位置: com.alibaba.nacos.config.server.controller.ConfigController#listener 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 //</description></item><item><title>18 删除配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/18-%E5%88%A0%E9%99%A4%E9%85%8D%E7%BD%AE/</link><pubDate>Wed, 13 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/18-%E5%88%A0%E9%99%A4%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，删除配置分为 http 和 grpc 两种方式，分别为 ConfigControllerV2#deleteConfig 和 ConfigRemoveRequestHandler。这两个方法的处理逻辑都是一样</description></item><item><title>17 获取配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/17-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</link><pubDate>Tue, 12 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/17-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，获取配置分为 http 和 grpc 两种方式，分别为 ConfigControllerV2#getConfig 和 ConfigQueryRequestHandler。这两个方法的处理逻辑都是一样的</description></item><item><title>16 发布配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/16-%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE/</link><pubDate>Mon, 11 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/16-%E5%8F%91%E5%B8%83%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，发布配置分为 http 和 grpc 两种方式，分别为 ConfigControllerV2#publishConfig 和 ConfigPublishRequestHandler。这两个方法的处理逻辑都是一</description></item><item><title>15 同步服务和实例元数据信息</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/15-%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/</link><pubDate>Sat, 09 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/15-%E5%90%8C%E6%AD%A5%E6%9C%8D%E5%8A%A1%E5%92%8C%E5%AE%9E%E4%BE%8B%E5%85%83%E6%95%B0%E6%8D%AE%E4%BF%A1%E6%81%AF/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，手动创建 service，更新 service，删除 service，更新 instance，都是通过 raft 协议来实现的，所以来简单</description></item><item><title>14 CP 协议 Raft</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/14-cp-%E5%8D%8F%E8%AE%AE-raft/</link><pubDate>Wed, 06 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/14-cp-%E5%8D%8F%E8%AE%AE-raft/</guid><description>nacos 基于 2.2.4 版本 raft 协议的初始化源码位置: com.alibaba.nacos.core.distributed.raft.JRaftProtocol#init 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51</description></item><item><title>13 集群成员管理</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/13-%E9%9B%86%E7%BE%A4%E6%88%90%E5%91%98%E7%AE%A1%E7%90%86/</link><pubDate>Tue, 05 Sep 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/13-%E9%9B%86%E7%BE%A4%E6%88%90%E5%91%98%E7%AE%A1%E7%90%86/</guid><description>nacos 基于 2.2.4 版本 在 nacos 中，集群成员分为静态加载和动态加载，静态加载就是读取 cluster.conf 文件，动态加载就是从一个接口中获取。 集群成员加载的入口源码位置: com.alibaba.nacos.core.cluster.ServerMemberManager#initAndStartLookup 1 2</description></item><item><title>12 AP 协议 Distro</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/12-ap-%E5%8D%8F%E8%AE%AE-distro/</link><pubDate>Tue, 29 Aug 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/12-ap-%E5%8D%8F%E8%AE%AE-distro/</guid><description>nacos 基于 2.2.4 版本 nacos 对于临时实例注册，采用的是 AP 协议，我们看看是怎么设计的。 DistroProtocol 初始化源码位置: com.alibaba.nacos.core.distributed.distro.DistroProtocol#DistroProtocol 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // DistroProtocol 构</description></item></channel></rss>