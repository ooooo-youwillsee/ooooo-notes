<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Jdk - 标签 - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/jdk/</link><description>Jdk - 标签 | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (线偶)</managingEditor><webMaster>297872913@qq.com (线偶)</webMaster><lastBuildDate>Tue, 21 May 2024 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/jdk/" rel="self" type="application/rss+xml"/><item><title>07 ThreadPoolExecutor</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/07-threadpoolexecutor/</link><pubDate>Tue, 21 May 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/07-threadpoolexecutor/</guid><description>jdk 基于 8 版本 在平时的开发中，我们经常会用到 ThreadPoolExecutor, 需要了解源码。 使用方式 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 public class ThreadPoolTest { @Test void test() { ThreadPoolExecutor executor = new ThreadPoolExecutor( 2, 10, 60, TimeUnit.SECONDS, new LinkedBlockingQueue&amp;lt;&amp;gt;(), new</description></item><item><title>05 TreeMap</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/05-treemap/</link><pubDate>Wed, 03 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/05-treemap/</guid><description>jdk 基于 8 版本 在平时的开发中，我们很少会用到 TreeMap, 但是还是需要了解源码。 TreeMap 基于红黑树来实现按照 key 排序，关于这个算法，这里不做解释。 使用方式 1 2 3 4</description></item><item><title>04 LinkedHashMap</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/04-linkedhashmap/</link><pubDate>Tue, 02 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/04-linkedhashmap/</guid><description>jdk 基于 8 版本 在平时的开发中，我们会经常用到 LinkedHashMap, 非常有必要了解源码。 LinkedHashMap 基于 HashMap 来实现, 内部借助双向链表来维持访问顺序，可以用来实现 LRU 算法。 使用方式</description></item><item><title>03 HashMap</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/03-hashmap/</link><pubDate>Mon, 01 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/03-hashmap/</guid><description>jdk 基于 8 版本 在平时的开发中，我们会经常用到 HashMap, 非常有必要了解源码。 HashMap 基于拉链法和红黑树来实现，关于这两个算法，这里不做解释。 使用方式 1 2 3 4 5</description></item><item><title>01 ArrayList</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/01-arraylist/</link><pubDate>Mon, 18 Mar 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/01-arraylist/</guid><description><![CDATA[jdk 基于 8 版本 在平时的开发中，我们会经常用到 ArrayList, 非常有必要了解源码。 使用方式 1 2 3 4 5 6 7 8 9 10 11 12 13 public class ArrayListTest { @Test void test() { List&lt;String&gt; ids = new ArrayList&lt;&gt;(); assertThat(ids.add(&#34;1&#34;)).isEqualTo(true); assertThat(ids.add(&#34;2&#34;)).isEqualTo(true); assertThat(ids.add(&#34;3&#34;)).isEqualTo(true); assertThat(ids.remove(&#34;2&#34;)).isEqualTo(true); assertThat(ids.set(0, &#34;4&#34;)).isEqualTo(&#34;1&#34;); assertThat(ids.get(0)).isEqualTo(&#34;4&#34;); }]]></description></item><item><title>02 LinkedList</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/02-linkedlist/</link><pubDate>Mon, 18 Mar 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/02-linkedlist/</guid><description><![CDATA[jdk 基于 8 版本 在平时的开发中，我们会经常用到 LinkedList, 非常有必要了解源码。 使用方式 1 2 3 4 5 6 7 8 9 10 11 12 13 public class LinkedListTest { @Test void test() { List&lt;String&gt; ids = new LinkedList&lt;&gt;(); assertThat(ids.add(&#34;1&#34;)).isEqualTo(true); assertThat(ids.add(&#34;2&#34;)).isEqualTo(true); assertThat(ids.add(&#34;3&#34;)).isEqualTo(true); assertThat(ids.remove(&#34;2&#34;)).isEqualTo(true); assertThat(ids.set(0, &#34;4&#34;)).isEqualTo(&#34;1&#34;); assertThat(ids.get(0)).isEqualTo(&#34;4&#34;); }]]></description></item><item><title>openjdk build</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/openjdk-build/</link><pubDate>Wed, 01 Feb 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/openjdk-build/</guid><description><![CDATA[相关命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 sudo apt install build-essential manpages-dev software-properties-common sudo add-apt-repository ppa:ubuntu-toolchain-r/test sudo apt update &amp;&amp; sudo apt install gcc-11 g++-11 1. sudo apt update &amp;&amp; sudo apt upgrade gcc libfontconfig1-dev systemtap-sdt-dev libx11-dev sudo apt-get install libx11-dev libxext-dev libxrender-dev libxrandr-dev libxtst-dev libxt-dev sudo apt-get install libcups2-dev sudo apt-get install libasound2-dev]]></description></item></channel></rss>