<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Dubbo - Tag - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/dubbo/</link><description>Dubbo - Tag - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Mon, 25 Dec 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/dubbo/" rel="self" type="application/rss+xml"/><item><title>13 集成 k8s</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/13-%E9%9B%86%E6%88%90-k8s/</link><pubDate>Mon, 25 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/13-%E9%9B%86%E6%88%90-k8s/</guid><description>dubbo 基于 3.2.6 版本 如果我们将 dubbo 应用部署在 k8s 环境中，我们就可以使用 k8s 作为注册中心。 服务调用流程 provider 使用 KubernetesServiceDiscovery#doRegister 注册服务实例，元数据信息会存放在 pod 对象上. consumer 使</description></item><item><title>12 集成 spring</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/12-%E9%9B%86%E6%88%90-spring/</link><pubDate>Sun, 24 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/12-%E9%9B%86%E6%88%90-spring/</guid><description>dubbo 基于 3.2.6 版本 dubbo 集成 spring 的实现方式： 提供 ServiceAnnotationPostProcessor 来扫描 @DubboService 注解，导出服务 提供 ReferenceAnnotationBeanPostProcessor 来扫描 @DubboReference 注解，引用服务 提供 SpringExtensionInjector 来获取 spring 的 bean 提供 DubboInfraBeanRegisterPostProcessor 来注册相关类，加载 spring 配置 ServiceAnnotationPostProcessor 对</description></item><item><title>11 常用过滤器</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/11-%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E5%99%A8/</link><pubDate>Sat, 23 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/11-%E5%B8%B8%E7%94%A8%E8%BF%87%E6%BB%A4%E5%99%A8/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中，filter 是非常核心的组件之一，很多功能都是依靠 filter 来实现的，下面我来介绍几种常用的 filter 实现。 ConsumerContextFilter (consumer 传递隐式参数) 源码位置:</description></item><item><title>09 dubbo 协议</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/09-dubbo-%E5%8D%8F%E8%AE%AE/</link><pubDate>Thu, 07 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/09-dubbo-%E5%8D%8F%E8%AE%AE/</guid><description><![CDATA[在 dubbo 2.x 中，最常用的协议就是 dubbo 协议，我们有必要弄懂整个实现过程。 export 导出服务 源码位置: org.apache.dubbo.rpc.protocol.dubbo.DubboProtocol#export 1 2 3 4 5 6 7 8 9 10 11 12 13 14 @Override public &lt;T&gt; Exporter&lt;T&gt; export(Invoker&lt;T&gt; invoker) throws RpcException { checkDestroyed(); URL url = invoker.getUrl();]]></description></item><item><title>08 引用服务（接口级别）</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/08-%E5%BC%95%E7%94%A8%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%BA%A7%E5%88%AB/</link><pubDate>Wed, 06 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/08-%E5%BC%95%E7%94%A8%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%BA%A7%E5%88%AB/</guid><description>dubbo 基于 3.2.6 版本 接口级别引用是 dubbo 2.x 版本的方式，其主流程和之前的章节【引用服务】没有差别，主要区别在于注册中心的逻辑不一样。 RegistryProtocol#doCreateInvoker 创建 invoker 源码位置: org.apache.dubbo.registry.integration.RegistryProtocol#doCreateInvoker 1</description></item><item><title>07 导出服务（接口级别）</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/07-%E5%AF%BC%E5%87%BA%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%BA%A7%E5%88%AB/</link><pubDate>Tue, 05 Dec 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/07-%E5%AF%BC%E5%87%BA%E6%9C%8D%E5%8A%A1%E6%8E%A5%E5%8F%A3%E7%BA%A7%E5%88%AB/</guid><description>dubbo 基于 3.2.6 版本 接口级别导出是 dubbo 2.x 版本的方式，其主流程和之前的章节【导出服务】没有差别，主要区别在于注册中心的逻辑不一样。 RegistryProtocol#export 导出服务 源码位置: org.apache.dubbo.registry.integration.RegistryProtocol#export</description></item><item><title>06 引用服务</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/06-%E5%BC%95%E7%94%A8%E6%9C%8D%E5%8A%A1/</link><pubDate>Mon, 27 Nov 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/06-%E5%BC%95%E7%94%A8%E6%9C%8D%E5%8A%A1/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中引用服务的源码是非常复杂的，这里只介绍主要流程。 DefaultModuleDeployer#referServices 引用服务 源码位置: org.apache.dubbo.config.deploy.DefaultModuleDeployer#referServices 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</description></item><item><title>05 导出服务</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/05-%E5%AF%BC%E5%87%BA%E6%9C%8D%E5%8A%A1/</link><pubDate>Sat, 25 Nov 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/05-%E5%AF%BC%E5%87%BA%E6%9C%8D%E5%8A%A1/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中导出服务的源码是非常复杂的，这里只介绍主要流程。 DefaultModuleDeployer#exportServices 导出服务 源码位置: org.apache.dubbo.config.deploy.DefaultModuleDeployer#exportServices 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</description></item><item><title>从零学 dubbo</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BB%8E%E9%9B%B6%E5%AD%A6-dubbo/</link><pubDate>Fri, 24 Nov 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BB%8E%E9%9B%B6%E5%AD%A6-dubbo/</guid><description>为什么学 在后端开发中，rpc 是我们经常用到的技术，而 dubbo 是 java 的一种流行的 rpc 框架。 怎么学 在 B 站中，找一个 dubbo 的入门视频来学习 学习github dubbo-samples 学习</description></item><item><title>04 配置加载</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/04-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD/</link><pubDate>Thu, 28 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/04-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中支持配置中心，如果没有配置，则会检查注册中心能否当作配置中心。 启动配置中心 源码位置: org.apache.dubbo.config.deploy.DefaultApplicationDeployer#startConfigCenter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item></channel></rss>