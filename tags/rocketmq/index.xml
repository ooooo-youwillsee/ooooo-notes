<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>rocketmq - Tag - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/tags/rocketmq/</link><description>rocketmq - Tag - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Fri, 20 Oct 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/tags/rocketmq/" rel="self" type="application/rss+xml"/><item><title>03 producer 发送消息</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/03-producer-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</link><pubDate>Fri, 20 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/03-producer-%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF/</guid><description>rocketmq 基于 5.1.4 版本 在 rocketmq 中，消息分为多个类型，比如普通消息、批量消息、延迟消息、事务消息等，这一节主要介绍普通消息的逻辑，后面的章节会继续介绍其他消</description></item><item><title>02 broker 注册 namesvr</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/02-broker-%E6%B3%A8%E5%86%8C-namesvr/</link><pubDate>Thu, 19 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/02-broker-%E6%B3%A8%E5%86%8C-namesvr/</guid><description>rocketmq 基于 5.1.4 版本 broker 发起注册请求 源码位置: org.apache.rocketmq.broker.BrokerController#start 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 // 启动定时任务，发起 broker 注册 public void start() throws Exception {</description></item><item><title>01 搭建 rocketmq 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/01-%E6%90%AD%E5%BB%BA-rocketmq-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Sat, 14 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/01-%E6%90%AD%E5%BB%BA-rocketmq-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>rocketmq 基于 5.1.4 版本 启动 namesrv 在 org.apache.rocketmq.namesrv.NamesrvStartup 中，配置环境变量 ROCKETMQ_HOME，如下图。 启动 namesrv 启动 broker 在 org.apache.rocketmq.broker.BrokerController 中，配置环境变量 ROCKETMQ_HOME 和启动参数，如下图。 1 2 3 # -n 指</description></item><item><title>rocketmq 的 LitePullConsumer 使用</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rocketmq-%E7%9A%84-litepullconsumer-%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 07 Jul 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rocketmq-%E7%9A%84-litepullconsumer-%E4%BD%BF%E7%94%A8/</guid><description>1. 代码 在自定义封装 MQ 时，要注意 producer 和 consumer 的初始化时机，否则会出现 consumer 占用 consumerQueue 的情况 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description></item></channel></rss>