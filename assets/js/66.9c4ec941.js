(window.webpackJsonp=window.webpackJsonp||[]).push([[66],{545:function(t,e,s){"use strict";s.r(e);var a=s(33),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"学习源码的前置知识"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#学习源码的前置知识"}},[t._v("#")]),t._v(" 学习源码的前置知识")]),t._v(" "),e("h2",{attrs:{id:"_1-gvk-定义"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-gvk-定义"}},[t._v("#")]),t._v(" 1. GVK 定义")]),t._v(" "),e("p",[t._v("GVK(group version kind): 资源组、资源版本、资源类型")]),t._v(" "),e("p",[t._v("表示 apps 组下 v1 版本 Deployment 类型的资源。")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" apps/v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Deployment\n")])])]),e("p",[t._v("表示 core 组下 v1 版本 Pod 类型的资源。(没有组信息表示"),e("strong",[t._v("核心组")]),t._v(")")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("apiVersion")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" v1\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("kind")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Pod\n")])])]),e("h2",{attrs:{id:"_2-kubernetes-对象结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-kubernetes-对象结构"}},[t._v("#")]),t._v(" 2. kubernetes 对象结构")]),t._v(" "),e("p",[t._v("每个对象都可以分为"),e("strong",[t._v("四个部分")]),t._v("。")]),t._v(" "),e("p",[t._v("例如 "),e("strong",[t._v("Deployment")]),t._v(" 资源：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("TypeMeta")]),t._v(": GVK 信息")]),t._v(" "),e("li",[e("code",[t._v("ObjectMeta")]),t._v(": 对象元数据，比如有属性 name、namespace")]),t._v(" "),e("li",[e("code",[t._v("DeploymentSpec")]),t._v(": 对象定义规范，比如有属性 replicas(控制副本数量)、template(定义 Pod 的模板)、selector(标签选择器，与 Pod 标签一样)、strategy(Pod 升级策略)")]),t._v(" "),e("li",[e("code",[t._v("DeploymentStatus")]),t._v(": 对象运行时状态， 比如有属性 replicas(总的副本数)")])]),t._v(" "),e("p",[t._v("代码路径："),e("code",[t._v("kubernetes\\vendor\\k8s.io\\api\\apps\\v1\\types.go")])]),t._v(" "),e("div",{staticClass:"language-go extra-class"},[e("pre",{pre:!0,attrs:{class:"language-go"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Deployment "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nmetav1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("TypeMeta "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:",inline"`')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Standard object's metadata.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +optional")]),t._v("\nmetav1"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("ObjectMeta "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"metadata,omitempty" protobuf:"bytes,1,opt,name=metadata"`')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Specification of the desired behavior of the Deployment.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +optional")]),t._v("\nSpec DeploymentSpec "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"spec,omitempty" protobuf:"bytes,2,opt,name=spec"`')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Most recently observed status of the Deployment.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +optional")]),t._v("\nStatus DeploymentStatus "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"status,omitempty" protobuf:"bytes,3,opt,name=status"`')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"_3-kubernetes-源码目录结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-kubernetes-源码目录结构"}},[t._v("#")]),t._v(" 3. kubernetes 源码目录结构")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("cmd")]),t._v(": 可执行程序包， 例如 kubelet 的入口为 "),e("code",[t._v("kubernetes\\cmd\\kubelet\\kubelet.go")])]),t._v(" "),e("li",[e("code",[t._v("pkg")]),t._v(": kubernetes 包路径, 有些子目录与 cmd 目录一样，就是"),e("strong",[t._v("入口文件")]),t._v("依赖的包")]),t._v(" "),e("li",[e("code",[t._v("vendor")]),t._v(": 第三方包，其中也有 kubernetes 的包")]),t._v(" "),e("li",[e("code",[t._v("plugin")]),t._v(": 准入插件和认证插件")]),t._v(" "),e("li",[e("code",[t._v("hack")]),t._v(": 脚本路径，非常有用")]),t._v(" "),e("li",[e("code",[t._v("api")]),t._v(": OpenAPI 定义")])]),t._v(" "),e("p",[t._v("上述,只是简单的描述了，目前只需要知道 "),e("code",[t._v("cmd")]),t._v(", "),e("code",[t._v("pkg")]),t._v(", "),e("code",[t._v("vendor")]),t._v(" 是非常重要的，也是我们经常看的。")]),t._v(" "),e("h2",{attrs:{id:"_4-如何去阅读源码-真的需要把整个项目都运行起来吗"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-如何去阅读源码-真的需要把整个项目都运行起来吗"}},[t._v("#")]),t._v(" 4. 如何去阅读源码，真的需要把整个项目都运行起来吗？")]),t._v(" "),e("p",[t._v("我个人认为是完全不需要。")]),t._v(" "),e("p",[t._v("一般来说看源码，只需要"),e("strong",[t._v("了解主线代码，知道哪些类是怎么配合的，一起完成了什么样的功能")]),t._v("，即使你把整个程序都运行起来了，有些分支条件的代码，需要特殊的输入数据，在你不熟悉代码的情况下，你也很难去模拟，这时候我们只能看"),e("strong",[t._v("代码的测试类")]),t._v("\n，来了解"),e("strong",[t._v("代码是怎样处理这个特殊数据的")]),t._v("。")]),t._v(" "),e("p",[t._v("特意说明一下：")]),t._v(" "),e("p",[t._v("以后的阅读代码的部分，我基本以"),e("strong",[t._v("测试类")]),t._v("来带领大家阅读。")])])}),[],!1,null,null,null);e.default=n.exports}}]);