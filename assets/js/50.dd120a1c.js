(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{448:function(a,t,n){"use strict";n.r(t);var s=n(25),e=Object(s.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"_1、final"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、final"}},[a._v("#")]),a._v(" 1、final")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("final")]),a._v(" 修饰的类，不能被继承。")]),a._v(" "),n("li",[n("code",[a._v("final")]),a._v(" 修饰的变量，不能被修改。")]),a._v(" "),n("li",[n("code",[a._v("final")]),a._v(" 修饰的方法，不能被重写。")]),a._v(" "),n("li",[n("code",[a._v("final")]),a._v(" 不是 "),n("code",[a._v("immutable")]),a._v("，对象的属性还是可以改变的。")])]),a._v(" "),n("h2",{attrs:{id:"_2、finally"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、finally"}},[a._v("#")]),a._v(" 2、finally")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("finally")]),a._v(" 是 Java 保证代码一定会被执行的机制，可以使用 try-catch-finally、try-finally 来关闭数据库连接，"),n("code",[a._v("unlock()")]),a._v("等。")]),a._v(" "),n("li",[a._v("如果是利用 "),n("code",[a._v("finally")]),a._v(" 机制来关闭资源，最好是用 try-with-resources。")])]),a._v(" "),n("p",[n("strong",[a._v("特例")])]),a._v(" "),n("div",{staticClass:"language-java extra-class"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("try")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// do something ")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Sysem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("exit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("finally")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Sysem")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("out"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("println")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("“"),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Print")]),a._v(" from fnally”"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),n("p",[a._v("上面的 "),n("code",[a._v("finally")]),a._v(" 语句不会被执行。")]),a._v(" "),n("h2",{attrs:{id:"_3、finalize"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、finalize"}},[a._v("#")]),a._v(" 3、finalize")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("finalize")]),a._v(" 方法是 "),n("code",[a._v("Object")]),a._v(" 中一个方法，它的设计目的是保证对象在垃圾收集前完成资源的回收，现在已经不推荐使用，在 Java 9 中已被标记为 "),n("code",[a._v("@Deprecated")]),a._v("。")]),a._v(" "),n("li",[a._v("使用 "),n("code",[a._v("finalize")]),a._v(" 可能会使程序性能降低，因为 JVM 会做额外处理。")]),a._v(" "),n("li",[a._v("Java 目前使用 "),n("code",[a._v("Cleaner")]),a._v(" 来替换 "),n("code",[a._v("finalize")]),a._v("，"),n("code",[a._v("Cleaner")]),a._v("的实现利用了幻象引用（虚引用）和引用队列，比如 "),n("code",[a._v("mysql-connector-java")]),a._v(" 就是利用幻象引用来回收资源。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);