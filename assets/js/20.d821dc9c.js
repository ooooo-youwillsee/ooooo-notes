(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{475:function(e,t,s){e.exports=s.p+"assets/img/02-IDE-config-launch-parameter.15cec98c.png"},476:function(e,t,s){e.exports=s.p+"assets/img/02-connect-dlv.77781c32.png"},544:function(e,t,s){"use strict";s.r(t);var a=s(33),r=Object(a.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"搭建-kubernetes-1-24-版本的源码调试环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#搭建-kubernetes-1-24-版本的源码调试环境"}},[e._v("#")]),e._v(" 搭建 kubernetes 1.24 版本的源码调试环境")]),e._v(" "),t("h2",{attrs:{id:"_1-方法1-在本机的-ide-来调试源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-方法1-在本机的-ide-来调试源码"}},[e._v("#")]),e._v(" 1. 方法1，在本机的 IDE 来调试源码")]),e._v(" "),t("p",[e._v("如果你是 linux 系统，可以在 linux 中搭建一个 kubernetes 单机的集群，在此系统中安装 IDE(Goland) 来调试.")]),e._v(" "),t("p",[e._v("具体步骤如下：")]),e._v(" "),t("ol",[t("li",[e._v("下载源码 (go 的版本要求 1.18.x)")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone git@github.com:kubernetes/kubernetes.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" kubernetes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b origin/release-1.24\ngo mod download \n")])])]),t("ol",{attrs:{start:"2"}},[t("li",[t("p",[e._v("用 IDE 打开 kubernetes 源码")])]),e._v(" "),t("li",[t("p",[e._v("找到服务的启动参数（比如 kube-controller-manager）")])])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 执行命令")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" kube-controller-manager "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 命令执行之后，输出如下, kube-controller-manager 后面的就是程序的参数")]),e._v("\nroot        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1584")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.0")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.8")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("820020")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("110072")]),e._v(" ?       Ssl  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),e._v(":28   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":02 kube-controller-manager --allocate-node-cidrs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --authentication-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --authorization-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --bind-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 --client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.244")]),e._v(".0.0/16 --cluster-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes --cluster-signing-cert-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-signing-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.key --controllers"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("*,bootstrapsigner,tokencleaner --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --leader-elect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --requestheader-client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/front-proxy-ca.crt --root-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --service-account-private-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/sa.key --service-cluster-ip-range"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.96")]),e._v(".0.0/12 --use-service-account-credentials"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("移动 kubernetes 的静态 pod （比如 kube-controller-manager）")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /etc/kubernetes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" manifests/kube-controller-manager.yaml ./\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("用 IDE 启动服务（比如 kube-controller-manager）")])]),e._v(" "),t("p",[e._v("程序的入口： "),t("code",[e._v("cmd/kube-controller-manager/controller-manager.go")]),e._v(" (其他的服务也是类似的路径)")]),e._v(" "),t("p",[e._v("点击，配置启动参数，如下图")]),e._v(" "),t("p",[t("img",{attrs:{src:s(475),alt:"02-配置启动参数"}})]),e._v(" "),t("p",[e._v("现在基本就配置好了")]),e._v(" "),t("ol",{attrs:{start:"6"}},[t("li",[e._v("检查服务是否正常启动 （比如 kube-controller-manager）")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 执行命令看没有 kube-controller-manager")]),e._v("\nkubectl get pods -A\n")])])]),t("h2",{attrs:{id:"_2-方法2-借助-dlv-来调试源码"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-方法2-借助-dlv-来调试源码"}},[e._v("#")]),e._v(" 2. 方法2. 借助 dlv 来调试源码")]),e._v(" "),t("p",[e._v("如果你是 mac/window 系统，可以借助 "),t("code",[e._v("dlv")]),e._v(" 来调试源码。")]),e._v(" "),t("p",[e._v("具体步骤如下：")]),e._v(" "),t("ol",[t("li",[e._v("下载源码 (go 的版本要求 1.18.x)")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" clone git@github.com:kubernetes/kubernetes.git\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" kubernetes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("git")]),e._v(" checkout -b origin/release-1.24\ngo mod download \n")])])]),t("p",[e._v("上述下载源码，需要在 "),t("strong",[e._v("本地window")]),e._v(" 和 "),t("strong",[e._v("k8s节点")]),e._v(" 上都下载。")]),e._v(" "),t("p",[e._v("注意：由于是远端调试，所以需要在 k8s master 节点上，重新编译源码，去掉 "),t("code",[e._v("-N -l")]),e._v(".")]),e._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[e._v("在 k8s master 节点上，重新编译源码")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" kubernetes \n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("make")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("DBG")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 在 hack/lib/golang.sh 中")]),e._v("\n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("下载可能用到的工具，如 "),t("code",[e._v("dlv")]),e._v(" (你可能需要提前设置 "),t("strong",[e._v("GOPATH")]),e._v(" 环境变量)")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 可能非常慢，需要设置代理")]),e._v("\ngo get -u github.com/cloudflare/cfssl/cmd/cfssl\ngo get -u github.com/cloudflare/cfssl/cmd/cfssljson\ngo get -u github.com/go-delve/delve/cmd/dlv\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 配置环境变量")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("PATH")])]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[e._v("$PATH")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$GOPATH")]),e._v("/bin \n")])])]),t("ol",{attrs:{start:"3"}},[t("li",[e._v("找到服务的启动参数（比如 kube-controller-manager）")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 执行命令")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("ps")]),e._v(" aux "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" kube-controller-manager "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("|")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v(" -v "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("grep")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 命令执行之后，输出如下, kube-controller-manager 后面的就是程序的参数")]),e._v("\nroot        "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1584")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("4.0")]),e._v("  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0.8")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("820020")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("110072")]),e._v(" ?       Ssl  "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("23")]),e._v(":28   "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("0")]),e._v(":02 kube-controller-manager --allocate-node-cidrs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --authentication-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --authorization-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --bind-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 --client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.244")]),e._v(".0.0/16 --cluster-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes --cluster-signing-cert-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-signing-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.key --controllers"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("*,bootstrapsigner,tokencleaner --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --leader-elect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --requestheader-client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/front-proxy-ca.crt --root-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --service-account-private-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/sa.key --service-cluster-ip-range"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.96")]),e._v(".0.0/12 --use-service-account-credentials"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n")])])]),t("ol",{attrs:{start:"4"}},[t("li",[e._v("移动 kubernetes 的静态 pod （比如 kube-controller-manager）")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("cd")]),e._v(" /etc/kubernetes\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" manifests/kube-controller-manager.yaml ./\n")])])]),t("ol",{attrs:{start:"5"}},[t("li",[e._v("用 "),t("code",[e._v("dlv")]),e._v(" 启动服务")])]),e._v(" "),t("p",[e._v("注意:")]),e._v(" "),t("ul",[t("li",[t("strong",[e._v("启动参数")]),e._v("和"),t("strong",[e._v("程序路径")]),e._v("，配置成你自己的，监听的端口是 "),t("code",[e._v("2346")])]),e._v(" "),t("li",[t("code",[e._v("dlv")]),e._v(" 在配置程序参数时，有 "),t("code",[e._v("--")]),e._v("， 如果后面参数有特殊符号，用 "),t("code",[e._v('--key="value"')]),e._v(" 形式")]),e._v(" "),t("li",[t("code",[e._v("dlv")]),e._v(" 启动之后，必须要触发(IDE go remote)，才能启动, 否则会一直等着。")])]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("dlv --listen"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(":2346 --headless"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --api-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" --accept-multiclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" /root/kubernetes/_output/bin/kube-controller-manager -- --allocate-node-cidrs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --authentication-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --authorization-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --bind-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 --client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.244")]),e._v(".0.0/16 --cluster-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes --cluster-signing-cert-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-signing-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.key --controllers"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("*,bootstrapsigner,tokencleaner --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --leader-elect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --requestheader-client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/front-proxy-ca.crt --root-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --service-account-private-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/sa.key --service-cluster-ip-range"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.96")]),e._v(".0.0/12 --use-service-account-credentials"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n")])])]),t("ol",{attrs:{start:"6"}},[t("li",[e._v("用 IDE 连接 dlv 服务（比如 kube-controller-manager）")])]),e._v(" "),t("p",[e._v("程序的入口： "),t("code",[e._v("cmd/kube-controller-manager/controller-manager.go")]),e._v(" (其他的服务也是类似的路径)")]),e._v(" "),t("ul",[t("li",[e._v("添加 "),t("strong",[e._v("Go Remote")]),e._v("， 配置 "),t("strong",[e._v("host")]),e._v(" 和 "),t("strong",[e._v("port")]),e._v("。")]),e._v(" "),t("li",[e._v("点击 ok，然后启动服务。")])]),e._v(" "),t("p",[t("img",{attrs:{src:s(476),alt:"02-连接dlv"}})]),e._v(" "),t("p",[e._v("现在基本就配置好了")]),e._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[e._v("提供一个调试的脚本 （可选）")])]),e._v(" "),t("p",[e._v("你现在会发现，如果想要调试，就必须要把 "),t("code",[e._v("manifests/kube-controller-manager.yaml")]),e._v(" 移出去，等不需要调试了，再把"),t("strong",[e._v("这个文件")]),e._v("移回来，这样非常麻烦。所以使用一个脚本来实现。")]),e._v(" "),t("p",[e._v("脚本内容如下(注意更改你的路径)：")]),e._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function-name function"}},[e._v("cleanup")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n "),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" /etc/kubernetes/kube-controller-manager.yaml /etc/kubernetes/manifests\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("trap")]),e._v(" cleanup EXIT\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[e._v("mv")]),e._v(" /etc/kubernetes/manifests/kube-controller-manager.yaml /etc/kubernetes\n\ndlv --listen"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(":2346 --headless"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --api-version"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("2")]),e._v(" --accept-multiclient "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("exec")]),e._v(" /root/kubernetes/_output/bin/kube-controller-manager -- --allocate-node-cidrs"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --authentication-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --authorization-kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --bind-address"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("127.0")]),e._v(".0.1 --client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-cidr"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.244")]),e._v(".0.0/16 --cluster-name"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("kubernetes --cluster-signing-cert-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --cluster-signing-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.key --controllers"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("*,bootstrapsigner,tokencleaner --kubeconfig"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/controller-manager.conf --leader-elect"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true --requestheader-client-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/front-proxy-ca.crt --root-ca-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/ca.crt --service-account-private-key-file"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("/etc/kubernetes/pki/sa.key --service-cluster-ip-range"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("10.96")]),e._v(".0.0/12 --use-service-account-credentials"),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v("true\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);