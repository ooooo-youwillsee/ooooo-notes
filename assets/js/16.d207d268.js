(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{370:function(t,s,_){t.exports=_.p+"assets/img/01_01.2a326778.png"},440:function(t,s,_){t.exports=_.p+"assets/img/01_02.f93be9f8.png"},529:function(t,s,_){"use strict";_.r(s);var a=_(33),v=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"_1、mysql-的基本架构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、mysql-的基本架构"}},[t._v("#")]),t._v(" 1、MySQL 的基本架构")]),t._v(" "),s("p",[s("img",{attrs:{src:_(370),alt:"MySQL 基本架构图"}})]),t._v(" "),s("p",[t._v("主要分为"),s("strong",[t._v("Server层")]),t._v("和"),s("strong",[t._v("存储引擎层")]),t._v("。")]),t._v(" "),s("p",[s("strong",[t._v("Server层")]),t._v("包括连接器、查询缓存、分析器、优化器、执行器等，涵盖MySQL的大多数核心服务功能，以及所有的内置函数（如日期、时间、数学和加密函数等），所有跨存储引擎的功能都在这一层实现，比如存储过程、触发器、视图等。")]),t._v(" "),s("p",[s("strong",[t._v("存储引擎层")]),t._v("负责数据的存储和提取。其架构模式是插件式的，支持 "),s("code",[t._v("InnoDB")]),t._v(" 、 "),s("code",[t._v("MyISAM")]),t._v(" 、 "),s("code",[t._v("Memory")]),t._v(" 等多个存储引擎。现在最常用的存储引擎是 "),s("code",[t._v("InnoDB")]),t._v(" ，它从 MySQL 5.5.5版本开始成为了默认存储引擎。")]),t._v(" "),s("h2",{attrs:{id:"_2、查询语句的执行流程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、查询语句的执行流程"}},[t._v("#")]),t._v(" 2、查询语句的执行流程")]),t._v(" "),s("h3",{attrs:{id:"_1、连接器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1、连接器"}},[t._v("#")]),t._v(" 1、连接器")]),t._v(" "),s("p",[t._v("连接器负责跟客户端建立连接、获取权限、维持和管理连接。")]),t._v(" "),s("p",[t._v("连接命令：")]),t._v(" "),s("div",{staticClass:"language-shell script extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql -h"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$ip")]),t._v(" -P"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$port")]),t._v(" -u"),s("span",{pre:!0,attrs:{class:"token variable"}},[t._v("$user")]),t._v(" -p\n")])])]),s("p",[t._v("如果用户名密码认证通过，连接器会到权限表里面查出你拥有的权限。")]),t._v(" "),s("p",[t._v("连接完成后，如果你没有后续的动作，这个连接就处于空闲状态（"),s("code",[t._v("Sleep")]),t._v("），通过 "),s("code",[t._v("show processlist")]),t._v(" 命令查看如下：")]),t._v(" "),s("p",[s("img",{attrs:{src:_(440),alt:"show processlist"}})]),t._v(" "),s("p",[t._v("客户端长时间处于 "),s("code",[t._v("Sleep")]),t._v(" 状态，连接器就会自动将它断开。由参数 "),s("code",[t._v("wait_timeout")]),t._v(" 控制的，默认值是8小时。")]),t._v(" "),s("p",[t._v("数据库里面，长连接是指连接成功后，如果客户端持续有请求，则一直使用同一个连接。短连接则是指每次执行完很少的几次查询就断开连接，下次查询再重新建立一个。建立连接的过程通常是比较复杂的，所以尽量使用长连接。")]),t._v(" "),s("p",[t._v("但全部使用长连接后，有些时候 MySQL 占用内存涨得特别快，这是因为 "),s("strong",[t._v("MySQL 在执行过程中临时使用的内存是管理在连接对象里面的，这些资源会在连接断开的时候才释放")]),t._v("。所以如果长连接累积下来，可能导致内存占用太大，被系统强行杀掉（OOM），从现象看就是 MySQL 异常重启了。")]),t._v(" "),s("p",[t._v("长连接解决方案：")]),t._v(" "),s("ol",[s("li",[t._v("定期断开长连接.")]),t._v(" "),s("li",[t._v("在 MySQL 5.7 版本后，通过执行 "),s("code",[t._v("mysql_reset_connection")]),t._v("来重新初始化连接资源， 无需重新连接和权限认证。")])]),t._v(" "),s("h3",{attrs:{id:"_2、查询缓存"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2、查询缓存"}},[t._v("#")]),t._v(" 2、查询缓存")]),t._v(" "),s("p",[s("strong",[t._v("只要对一个表更新，这个表上所有的查询缓存都会被清空。")]),t._v(" MySQL 8.0 缓存功能已经被删除。")]),t._v(" "),s("h3",{attrs:{id:"_3、分析器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、分析器"}},[t._v("#")]),t._v(" 3、分析器")]),t._v(" "),s("p",[t._v("对SQL语句做解析，词法分析（"),s("code",[t._v("select")]),t._v("、"),s("code",[t._v("insert")]),t._v("、"),s("code",[t._v("delete")]),t._v("、"),s("code",[t._v("update")]),t._v("）、语法分析（语法是否正确）。")]),t._v(" "),s("h3",{attrs:{id:"_4、优化器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4、优化器"}},[t._v("#")]),t._v(" 4、优化器")]),t._v(" "),s("p",[t._v("优化器选择索引。")]),t._v(" "),s("p",[t._v("例如，对于下面的语句，有两种查询逻辑：")]),t._v(" "),s("div",{staticClass:"language-shell script extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("mysql"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" * from t1 "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),t._v(" t2 using"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("ID"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  where t1.c"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),t._v(" and t2.d"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[t._v("先从 t1 里面取出 c = 10 的记录的ID值，再根据 ID 值关联到 t2，再判断 t2 里面 d 的值是否等于 20。")]),t._v(" "),s("li",[t._v("先从 t2 里面取出 d = 20 的记录的ID值，再根据 ID 值关联到 t1，再判断 t1 里面 c 的值是否等于 10。")])]),t._v(" "),s("h3",{attrs:{id:"_5、执行器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5、执行器"}},[t._v("#")]),t._v(" 5、执行器")]),t._v(" "),s("p",[t._v("先判断查询权限，如果有权限，执行器就会调用存储引擎提供的接口。")]),t._v(" "),s("h2",{attrs:{id:"_3、问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3、问题"}},[t._v("#")]),t._v(" 3、问题")]),t._v(" "),s("p",[t._v("如果你执行 "),s("code",[t._v("select * from T where k=1")]),t._v("，报不存在 K 这一列。是在哪个阶段报出来的？")]),t._v(" "),s("p",[t._v("分析器阶段")])])}),[],!1,null,null,null);s.default=v.exports}}]);