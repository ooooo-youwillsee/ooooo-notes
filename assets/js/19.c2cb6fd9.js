(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{408:function(s,t,a){s.exports=a.p+"assets/img/11_01.cb200e79.png"},409:function(s,t,a){s.exports=a.p+"assets/img/11_02.f0e6e6ba.png"},470:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h2",{attrs:{id:"_1、字符串索引"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、字符串索引"}},[s._v("#")]),s._v(" 1、字符串索引")]),s._v(" "),n("p",[s._v("假设，你现在维护一个支持邮箱登录的系统，用户表是这么定义的")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" create table SUser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nID bigint unsigned primary key,\nemail varchar"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("engine"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n")])])]),n("p",[s._v("要使用邮箱登录，一定会出现类似下面的语句：")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" f1, f2 from SUser where "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("email")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'xxx'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("email 这个字段上没有索引，那么这个语句就只能做全表扫描。")]),s._v(" "),n("p",[s._v("MySQL 是支持前缀索引的，你可以定义字符串的一部分作为索引，例如：")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table SUser "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" index index1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 整个字符串")]),s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table SUser "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" index index2"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 前 6 个字节")]),s._v("\n")])])]),n("p",[s._v("两个索引图差别如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:a(408),alt:"整个字符串"}})]),s._v(" "),n("p",[n("img",{attrs:{src:a(409),alt:"前 6 个字节"}})]),s._v(" "),n("p",[n("strong",[s._v("使用前缀索引的优势，占用的空间会更小，但可能会增加额外的记录扫描次数。")])]),s._v(" "),n("p",[s._v("例如分析执行语句 "),n("code",[s._v("select id,name,email from SUser where email='zhangssxyz@xxx.com';")]),s._v(" 的过程。")]),s._v(" "),n("ul",[n("li",[n("p",[s._v("使用 index1 (整个字符串)：\n"),n("indent"),s._v("这个过程中，只需要从 index1 索引树找到满足索引值是 ’zhangssxyz@xxx.com’ 的这条记录，再进行"),n("strong",[s._v("回表")]),s._v("操作，就可以返回结果。")],1)]),s._v(" "),n("li",[n("p",[s._v("使用 index2 (前 6 个字节)：\n"),n("indent"),s._v("这个过程中，需要从 index2 索引树找到满足索引值是 ’zhangs’ 的全部记录，再进行"),n("strong",[s._v("回表")]),s._v("操作，逐一判断 email 是 ’zhangssxyz@xxx.com’，最后返回结果。可能有大量以 ’zhangs’ 开头的记录， 所以可能会增加额外的记录扫描次数。")],1)])]),s._v(" "),n("p",[n("strong",[s._v("使用前缀索引，定义好长度，就可以做到既节省空间，又不用额外增加太多的查询成本。")])]),s._v(" "),n("p",[s._v("如果建立"),n("strong",[s._v("前缀索引")]),s._v("，就要关注区分度，区分度越高越好。\n可以使用如下语句，统计不同索引的个数：")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("distinct email"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" as L from SUser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("p",[s._v("例如，统计 4~7 个字节的前缀索引：")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" \n  count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("distinct left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email,4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("）as L4,\n  count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("distinct left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email,5"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("）as L5,\n  count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("distinct left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email,6"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("）as L6,\n  count"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("distinct left"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("email,7"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("）as L7,\nfrom SUser"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("h2",{attrs:{id:"_2、其他方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、其他方式"}},[s._v("#")]),s._v(" 2、其他方式")]),s._v(" "),n("p",[s._v("对于类似于邮箱这样的字段来说，使用前缀索引的效果可能还不错,遇到前缀的区分度不够好的情况时，我们要怎么办呢？")]),s._v(" "),n("p",[s._v("例如对身份证号的解决方法。")]),s._v(" "),n("ul",[n("li",[n("strong",[s._v("第一种方式是使用倒序存储。")])])]),s._v(" "),n("div",{staticClass:"language-shell script extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("mysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" field_list from t where id_card "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" reverse"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input_id_card_string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),n("ul",[n("li",[n("strong",[s._v("第二种方式是使用hash字段")])])]),s._v(" "),n("div",{staticClass:"language-shell script extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## 添加索引，用来存储 crc32。")]),s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" alter table t "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" id_card_crc int unsigned, "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" index"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id_card_crc"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询时判断 crc32 值")]),s._v("\nmysql"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" field_list from t where "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id_card_crc")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("crc32"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input_id_card_string'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" and "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id_card")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input_id_card_string'")]),s._v("\n")])])]),n("p",[n("strong",[s._v("它们的相同点是，都不支持范围查询。")])]),s._v(" "),n("h2",{attrs:{id:"_3、问题"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、问题"}},[s._v("#")]),s._v(" 3、问题")]),s._v(" "),n("p",[s._v('如果你在维护一个学校的学生信息数据库，学生登录名的统一格式是 ”学号@gmail.com", 而学号的规则是：十五位的数字，其中前三位是所在城市编号、第四到第六位是学校编号、第七位到第十位是入学年份、最后五位是顺序编号。')]),s._v(" "),n("p",[s._v("系统登录的时候都需要学生输入登录名和密码，验证正确后才能继续使用系统。就只考虑登录验证这个行为的话，你会怎么设计这个登录名的索引呢？")]),s._v(" "),n("p",[s._v("答案：")]),s._v(" "),n("p",[s._v("可以只存入学年份加顺序编号，它们的长度是 9 位。如果数字类型来存这 9 位数字。比如 201100001 ，这样只需要占 4 个字节。")])])}),[],!1,null,null,null);t.default=e.exports}}]);