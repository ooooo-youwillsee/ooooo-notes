(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{427:function(s,t,a){"use strict";a.r(t);var n=a(25),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"_1-tomcat-自定义错误页"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-tomcat-自定义错误页"}},[s._v("#")]),s._v(" 1. tomcat 自定义错误页")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("conf/server.xml")]),s._v(" 中的 "),a("strong",[s._v("Host")]),s._v("标签添加")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<Host name="localhost"  appBase="webapps"\n      unpackWARs="true" autoDeploy="true">\n  <Valve className="org.apache.catalina.valves.AccessLogValve" directory="logs"\n         prefix="localhost_access_log" suffix=".txt"\n         pattern="%h %l %u %t &quot;%r&quot; %s %b" />\n\n    // 这是新加的\n    <Valve className="org.apache.catalina.valves.ErrorReportValve"\n              errorCode.400="webapps/ROOT/error.jsp"\n              errorCode.0="webapps/ROOT/error.jsp"\n              showReport="false"\n              showServerInfo="false" />\n    // 这是新加的\n</Host>\n')])])]),a("p",[s._v("上面的 "),a("strong",[s._v("error.jsp")]),s._v(" 放在 "),a("code",[s._v("webapps/ROOT/")])]),s._v(" "),a("ul",[a("li",[s._v("参考 https://stackoverflow.com/questions/52814582/tomcat-is-not-redirecting-to-400-bad-request-custom-error-page")]),s._v(" "),a("li",[s._v("参考 https://tomcat.apache.org/tomcat-9.0-doc/config/valve.html#Error_Report_Valve")])]),s._v(" "),a("h2",{attrs:{id:"_2-gradle-全局设置仓库镜像"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-gradle-全局设置仓库镜像"}},[s._v("#")]),s._v(" 2. gradle 全局设置仓库镜像")]),s._v(" "),a("p",[s._v("在 "),a("code",[s._v("~\\.gradle")]),s._v(" 目录下新建文件 "),a("code",[s._v("init.gradle")]),s._v(", 内容如下")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('allprojects {\n    repositories {\n        mavenLocal()\n\t\t\tmaven { name "Alibaba" ; url "https://maven.aliyun.com/repository/public" }\n\t\t\tmaven { name "Bstek" ; url "http://nexus.bsdn.org/content/groups/public/" }\n    }\n\n\tbuildscript {\n\t\trepositories {\n\t\t\tmaven { name "Alibaba" ; url \'https://maven.aliyun.com/repository/public\' }\n\t\t\tmaven { name "Bstek" ; url \'http://nexus.bsdn.org/content/groups/public/\' }\n\t\t\tmaven { name "M2" ; url \'https://plugins.gradle.org/m2/\' }\n\t\t}\n\t}\n}\n')])])]),a("h2",{attrs:{id:"_3-apache-org-等网站无法访问"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-apache-org-等网站无法访问"}},[s._v("#")]),s._v(" 3. *.apache.org 等网站无法访问")]),s._v(" "),a("p",[s._v("运行命令 "),a("code",[s._v("ping apache.org")]),s._v(" 显示 IP 地址为 127.0.0.1")]),s._v(" "),a("p",[s._v("原因就是 DNS 出问题了，解决方法就是 "),a("strong",[s._v("配置网卡的 DNS 为 114.114.114.114")])]),s._v(" "),a("h2",{attrs:{id:"_4-inetaddress-gethostname-超时"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-inetaddress-gethostname-超时"}},[s._v("#")]),s._v(" 4. InetAddress#getHostName 超时")]),s._v(" "),a("p",[s._v("解决方法，设置 hosts 文件")]),s._v(" "),a("p",[s._v("比如 InetAddress 显示的是 "),a("strong",[s._v("192.168.130.1")]),s._v("， 所以就在 hosts 文件中添加一条记录 (反解析)")]),s._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("192.168.130.1 192.168.130.1\n")])])]),a("h2",{attrs:{id:"_5-nacos-在-tomcat-中无法注册服务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-nacos-在-tomcat-中无法注册服务"}},[s._v("#")]),s._v(" 5. nacos 在 tomcat 中无法注册服务")]),s._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Component")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NacosAutoServiceRegistrationWithTomcat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationRunner")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("required "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("NacosAutoServiceRegistration")]),s._v(" nacosAutoServiceRegistration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Autowired")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Environment")]),s._v(" environment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[s._v("@Override")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ApplicationArguments")]),s._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("throws")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Exception")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("nacosAutoServiceRegistration "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n\t\t    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新设置端口")]),s._v("\n\t\t\tnacosAutoServiceRegistration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Integer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("parseInt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("environment"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server.port"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t    l"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 重新注册")]),s._v("\n\t\t\tnacosAutoServiceRegistration"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("start")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])])]),a("h2",{attrs:{id:"_6-mysql8-0-第一次安装后-重置密码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-mysql8-0-第一次安装后-重置密码"}},[s._v("#")]),s._v(" 6. mysql8.0 第一次安装后，重置密码")]),s._v(" "),a("ol",[a("li",[s._v("查看临时密码： "),a("code",[s._v("cat /var/log/mysqld.log | grep password")])]),s._v(" "),a("li",[s._v("登录 mysql, "),a("code",[s._v("mysql -uroot -p")]),s._v(", 输入临时密码")]),s._v(" "),a("li",[s._v("设置简单密码，执行下面的命令")])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置密码长度")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" global validate_password.length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置可以和登录用户名一样")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" global validate_password.check_user_name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("off"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 简单密码策略")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" global validate_password.policy"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("ol",{attrs:{start:"4"}},[a("li",[s._v("执行命令 "),a("code",[s._v("ALTER USER 'root'@'localhost' IDENTIFIED BY 'root';")]),s._v(" 重置密码")]),s._v(" "),a("li",[s._v("创建用户， "),a("code",[s._v("CREATE USER 'root'@'%' IDENTIFIED BY 'root';")])]),s._v(" "),a("li",[s._v("授权，"),a("code",[s._v("GRANT ALL ON *.* TO 'root'@'%'")])])]),s._v(" "),a("h2",{attrs:{id:"_7-win10-默认没有创建软链接的权限"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-win10-默认没有创建软链接的权限"}},[s._v("#")]),s._v(" 7. win10，默认没有创建软链接的权限")]),s._v(" "),a("ol",[a("li",[s._v("在调试"),a("strong",[s._v("pulsar")]),s._v("，程序需要创建"),a("strong",[s._v("软链接")])]),s._v(" "),a("li",[s._v("系统必须要为"),a("strong",[s._v("专业版")]),s._v("，才会有"),a("strong",[s._v("策略组")]),s._v("权限设置")])]),s._v(" "),a("p",[s._v("参考")]),s._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"https://jingyan.baidu.com/article/e52e361588a3b501c60c5184.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("百度经验"),a("OutboundLink")],1)]),s._v(" "),a("li",[a("a",{attrs:{href:"https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-vista/cc766301(v=ws.10)",target:"_blank",rel:"noopener noreferrer"}},[s._v("win10 软连接权限设置"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"_8-搭建-mysql8-0-主从-在同一个机器上"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-搭建-mysql8-0-主从-在同一个机器上"}},[s._v("#")]),s._v(" 8. 搭建 mysql8.0 主从， 在同一个机器上")]),s._v(" "),a("h3",{attrs:{id:"_1-安装-mysql-运行-systemctl-start-mysqld-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-安装-mysql-运行-systemctl-start-mysqld-service"}},[s._v("#")]),s._v(" 1. 安装 mysql, 运行 "),a("code",[s._v("systemctl start mysqld.service")])]),s._v(" "),a("h3",{attrs:{id:"_2-创建-master-mysql-的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-创建-master-mysql-的配置文件"}},[s._v("#")]),s._v(" 2. 创建 master mysql 的配置文件")]),s._v(" "),a("h4",{attrs:{id:"_1-etc-my3307-cnf-文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-etc-my3307-cnf-文件配置"}},[s._v("#")]),s._v(" 1./etc/my3307.cnf 文件配置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3307/mysql.sock\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mysqld"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("datadir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3307\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3307/mysql.sock\n\nlog-error"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/log/mysqld3307.log\npid-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/run/mysqld/mysqld3307.pid\n\ndefault-time_zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+8:00'")]),s._v("\nmax_connect_errors "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# diable MySQL X plugin")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mysqlx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# location where binlog is stored ")]),s._v("\nlog-bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql/binlog3307\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server unique id")]),s._v("\nserver-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# each write is synchronized with the hard disk")]),s._v("\nsync-binlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which database is synchronized")]),s._v("\nbinlog-do-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("master_slave_test\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expire days for binlog")]),s._v("\nexpire-logs-days"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which database is ignored for binlog")]),s._v("\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("information_schema\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("performation_schema\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sys\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# skip dns resolve")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# skip-name-resolve")]),s._v("\n\n\n")])])]),a("h4",{attrs:{id:"_2-master-服务器初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-master-服务器初始化"}},[s._v("#")]),s._v(" 2. master 服务器初始化")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化, 会创建 dataDir [/var/lib/mysql3307]")]),s._v("\nmysqld --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3307.cnf --initialize\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  以root用户启动mysql -D表示以守护进程启动")]),s._v("\nmysqld --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3307.cnf --user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root -D\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录，密码在 cat /var/log/mysqld3307.log | grep password 中")]),s._v("\nmysql --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3307.cnf  -uroot -p\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重置密码")]),s._v("\nALTER "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),s._v(" IDENTIFIED BY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户` （可选）")]),s._v("\nCREATE "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED BY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 授权 (可选 )")]),s._v("\nGRANT ALL ON *.* TO "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建同步 binlog 的用户")]),s._v("\nCREATE "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'replicate_user'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),s._v(" IDENTIFIED BY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\ngrant replication slave,replication client on *.* to "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'replicate_user'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nflush privileges"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-创建-slave-mysql-的配置文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建-slave-mysql-的配置文件"}},[s._v("#")]),s._v(" 3. 创建 slave mysql 的配置文件")]),s._v(" "),a("h4",{attrs:{id:"_1-etc-my3308-cnf-文件配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-etc-my3308-cnf-文件配置"}},[s._v("#")]),s._v(" 1. /etc/my3308.cnf 文件配置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mysql"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3308")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3308/mysql.sock\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("mysqld"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("datadir")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3308\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("socket")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql3308/mysql.sock\n\nlog-error"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/log/mysqld3308.log\npid-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/run/mysqld/mysqld3308.pid\n\ndefault-time_zone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+8:00'")]),s._v("\nmax_connect_errors "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3308")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# diable MySQL X plugin")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("mysqlx")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# location where binlog is stored ")]),s._v("\nlog-bin"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/var/lib/mysql/binlog3308\n\nrelay-log"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("slave-relay-bin\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# server unique id")]),s._v("\nserver-id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n\nread_only "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# slave sync data to binlog")]),s._v("\nlog_slave_updates "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# each write is synchronized with the hard disk")]),s._v("\nsync-binlog"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which database is synchronized")]),s._v("\nreplicate-do-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("master_slave_test\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# expire days for binlog")]),s._v("\nexpire-logs-days"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which database is ignored for binlog")]),s._v("\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("information_schema\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("performation_schema\nbinlog-ignore-db"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("sys\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# skip dns resolve")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# skip-name-resolve")]),s._v("\n")])])]),a("h4",{attrs:{id:"_2-slave-服务器初始化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-slave-服务器初始化"}},[s._v("#")]),s._v(" 2. slave 服务器初始化")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 初始化, 会创建 dataDir [/var/lib/mysql3308]")]),s._v("\nmysqld --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3308.cnf --initialize\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  以root用户启动mysql -D表示以守护进程启动")]),s._v("\nmysqld --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3308.cnf --user"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("root -D\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 登录，密码在 cat /var/log/mysqld3308.log | grep password 中")]),s._v("\nmysql --defaults-file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/etc/my3308.cnf  -uroot -p\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重置密码")]),s._v("\nALTER "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),s._v(" IDENTIFIED BY "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置master地址， ip, port, user, password, binlogFile, binlogPosition")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取 binlogFile, binlogPosition，在 master 服务器上执行")]),s._v("\nshow master status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置复制位置")]),s._v("\nchange master to "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_host")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'192.168.0.119'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_port")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3307")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_user")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'replicate_user'")]),s._v(",  "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_password")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_log_file")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'binlog3307.000010'")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("master_log_pos")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3788")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启复制")]),s._v("\nstart slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询 slave 的状态, 如果显示 Slave_IO_Running: Yes, Slave_SQL_Running: Yes, 就是正常的")]),s._v("\nshow slave status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如有问题，先停掉 slave, 然后重新设置 master 的复制位置")]),s._v("\nstop slave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("h3",{attrs:{id:"_4-问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-问题"}},[s._v("#")]),s._v(" 4. 问题")]),s._v(" "),a("p",[s._v("在从库上执行 show slave status\\G\n显示报错：\nAuthentication plugin 'caching_sha2_password' reported error\n考虑到我的MySQL8 ，")]),s._v(" "),a("p",[s._v("查看主库：\n"),a("code",[s._v("SELECT plugin FROM")]),s._v("user"),a("code",[s._v("where user = 'replicate_user';")]),s._v("\n原来是主库repl的plugin是caching_sha2_password 导致连接不上，修改为mysql_native_password即可解决。")]),s._v(" "),a("p",[a("code",[s._v("ALTER USER 'replicate_user'@'%' IDENTIFIED WITH mysql_native_password BY 'root';")])]),s._v(" "),a("h3",{attrs:{id:"_5-参考"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-参考"}},[s._v("#")]),s._v(" 5.参考")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://dev.mysql.com/doc/refman/8.0/en/server-configuration-defaults.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("mysql8.0 官方配置"),a("OutboundLink")],1)])]),s._v(" "),a("h2",{attrs:{id:"_8-oracle-rac-集群-url-设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-oracle-rac-集群-url-设置"}},[s._v("#")]),s._v(" 8. oracle RAC 集群 url 设置")]),s._v(" "),a("p",[s._v("spring 的 applicaton.yml:")]),s._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("datasource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("driver-class-name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" oracle.jdbc.driver.OracleDriver\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" com.zaxxer.hikari.HikariDataSource\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("url")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" jdbc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("oracle"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("thin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=host1)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=host2)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=on))(CONNECT_DATA=(SERVICE_NAME=orcl)))\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("username")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" system\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("password")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" system\n")])])]),a("h2",{attrs:{id:"_9-vmware-的-ip-地址续约时间和静态ip设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-vmware-的-ip-地址续约时间和静态ip设置"}},[s._v("#")]),s._v(" 9. vmware 的 IP 地址续约时间和静态ip设置")]),s._v(" "),a("p",[s._v("win10 的路径 "),a("code",[s._v("C:\\ProgramData\\VMware")]),s._v(" 中的 "),a("code",[s._v("vmnetdhcp.leases")])]),s._v(" "),a("h2",{attrs:{id:"_10-部署-k8s"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-部署-k8s"}},[s._v("#")]),s._v(" 10. 部署 k8s")]),s._v(" "),a("h3",{attrs:{id:"_1-两台机器初始化设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-两台机器初始化设置"}},[s._v("#")]),s._v(" 1. 两台机器初始化设置")]),s._v(" "),a("h4",{attrs:{id:"_1-1-hostname-设置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-hostname-设置"}},[s._v("#")]),s._v(" 1.1 hostname 设置")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("hostnamectl "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看当前的hostname")]),s._v("\nhostnamectl set-hostname centos1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置主机名为centos1, 在 192.168.130.131 上执行")]),s._v("\nhostnamectl set-hostname centos2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置主机名为centos1, 在 192.168.130.132 上执行")]),s._v("\n")])])]),a("h4",{attrs:{id:"_1-2-etc-hosts-文件-两个机器都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-etc-hosts-文件-两个机器都需要"}},[s._v("#")]),s._v(" 1.2 /etc/hosts 文件 (两个机器都需要)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".1.8 ooooo\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".130.131 centos1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# k8s master")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".130.132 centos2 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# k8s worker")]),s._v("\n")])])]),a("h4",{attrs:{id:"_1-3-创建非-root-用户-两个机器都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-创建非-root-用户-两个机器都需要"}},[s._v("#")]),s._v(" 1.3 创建非 root 用户 (两个机器都需要)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" ooooo -g ooooo  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加用户，两个机器都执行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("passwd")]),s._v(" ooooo "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改用户密码，两个机器都执行")]),s._v("\n")])])]),a("h4",{attrs:{id:"_1-4-添加-yum-代理-两个机器都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-添加-yum-代理-两个机器都需要"}},[s._v("#")]),s._v(" 1.4 添加 yum 代理 (两个机器都需要)")]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/yum.conf "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑 yum 配置文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("http://ooooo:10800 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在文件中添加一行")]),s._v("\n")])])]),a("h4",{attrs:{id:"_1-5-安装-docker-服务-两个机器都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-安装-docker-服务-两个机器都需要"}},[s._v("#")]),s._v(" 1.5 安装 docker 服务 (两个机器都需要)")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://docs.docker.com/engine/install/centos/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方 docker 安装文档"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("参考文档安装 docker\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("vim")]),s._v(" /etc/docker/daemon.json "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编辑 docker 配置文件， 添加下面 json 配置，这是因为 k8s 默认使用的 cgroup driver 是 systemd")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"exec-opts"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"native.cgroupdriver=systemd"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" --now docker.service "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 docker 服务开机启动，并且现在启动")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status docker "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 docker 服务的状态， 失败了，使用下一条命令查看日志")]),s._v("\n\njournalctl -xeu docker "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 docker 日志服务")]),s._v("\n")])])]),a("h3",{attrs:{id:"_2-k8s-的-kubeadm-安装-两台都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-k8s-的-kubeadm-安装-两台都需要"}},[s._v("#")]),s._v(" 2. k8s 的 kubeadm 安装 (两台都需要)")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方 k8s 安装文档"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("参考文档检查服务器的状态是否可以安装 k8s 服务\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭 swap 分区")]),s._v("\nswapoff -a\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" vm.swappiness"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" /etc/sysctl.con "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 永久关闭 swap 分区， k8s 不能运行在有 swap 分区的机器上")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("free")]),s._v(" -h "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 swap 分区是否关闭，显示 0 表示已关闭 ")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 br_netfilter 是否被加载，没有任何输出，表示没有加载")]),s._v("\nlsmod "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("grep")]),s._v(" br_netfilter \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" modprobe br_netfilter "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加载 br_netfilter 模块")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 配置网络")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/modules-load.d/k8s.conf")]),s._v("\nbr_netfilter\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/sysctl.d/k8s.conf ")]),s._v("\nnet.bridge.bridge-nf-call-ip6tables = 1\nnet.bridge.bridge-nf-call-iptables = 1\nEOF")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" sysctl --system\n\n安装容器运行时"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("runtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(",k8s 高版本采用自动检查方式,不用做任何处理\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加 k8s 镜像仓库，在前面中，设置了 yum 代理")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在官方文档中多了 exclude=kubelet kubeadm kubectl ，这里去掉, 直接安装最新版本的")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),a("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("tee")]),s._v(" /etc/yum.repos.d/kubernetes.repo  ")]),s._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-\\"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$basearch")]),s._v("\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg\nEOF")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关闭 selinux")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" setenforce "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sed")]),s._v(" -i "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^SELINUX=enforcing$/SELINUX=permissive/'")]),s._v(" /etc/selinux/config\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 k8s 服务, --disableexcludes=kubernetes 表示排除 kubernetes 之外的镜像源")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubelet kubeadm kubectl --disableexcludes"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("kubernetes\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 kubelet 开机启动，并且现在启动")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动之后可能会报错，如果原因是 没有读取到 kubelet 的配置文件，这里可以不用管，稍后会重启这个服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" --now kubelet\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status kubelet "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 kubelet 的状态")]),s._v("\njournalctl -xeu kubelet "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 kubelet 的日志")]),s._v("\n")])])]),a("h3",{attrs:{id:"_3-创建-k8s-集群-两台都需要"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-创建-k8s-集群-两台都需要"}},[s._v("#")]),s._v(" 3. 创建 k8s 集群 (两台都需要)")]),s._v(" "),a("blockquote",[a("p",[a("a",{attrs:{href:"https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/create-cluster-kubeadm/",target:"_blank",rel:"noopener noreferrer"}},[s._v("创建 k8s 集群官方文档"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("a",{attrs:{href:"https://kubernetes.io/docs/concepts/cluster-administration/networking/#how-to-implement-the-kubernetes-networking-model",target:"_blank",rel:"noopener noreferrer"}},[s._v("k8s pod network 插件文档"),a("OutboundLink")],1)])]),s._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 kubeadm init 命令， 在 k8s master 机器上执行，默认情况下， k8s 创建 pod 不会在 master 机器上")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重点注意: --pod-network-cidr=10.244.0.0/16 这个参数必须要有，没有的话安装 cni 会报错")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意 preflight 的前置检查输出，可能需要添加 docker group，这个会输出有提示的命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" kubeadm init --image-repository registry.aliyuncs.com/google_containers --apiserver-advertise-address"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".130.131 --pod-network-cidr"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行命令之后，会有 kubeadm join 输出行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# （分为 master-token 和 worker-token）， 类似于下面的命令，在 centos2 上执行 worker-join-token 的命令")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" kubeadm "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("192.168")]),s._v(".130.131:6443 --token 8auvt0.zfw0ayr45d80q8pb "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n\t--discovery-token-ca-cert-hash sha256:efe854739efef5fbaf3f6e28c899481c8d7797c1997fc8315b921a9ede400ca8\n\t\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在机器上执行 kubeadm join 或者 kubeadm init 命令之后，重启 kubelet 服务\t")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl restart kubelet\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" systemctl status kubelet\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 kubectl 的配置文件， 为 $HOME/.kube/config")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" -i /etc/kubernetes/admin.conf "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -u"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" -g"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v(")")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$HOME")]),s._v("/.kube/config\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 pod network 插件, 这里使用 flannel 插件")]),s._v("\nkubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看 flannel 是否已经启动完成, cni 也启动成功")]),s._v("\nkubectl get pods -A\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 成功之后会有下面的服务， 都是 running 状态")]),s._v("\nkube-system   coredns-7f6cbbb7b8-5hqt5          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\nkube-system   coredns-7f6cbbb7b8-lwdrv          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\nkube-system   etcd-centos1                      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\nkube-system   kube-apiserver-centos1            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\nkube-system   kube-controller-manager-centos1   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\nkube-system   kube-flannel-ds-6lx7s             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    21h\nkube-system   kube-flannel-ds-n5tfn             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    21h\nkube-system   kube-proxy-78jrm                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    26h\nkube-system   kube-proxy-wl5jg                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    26h\nkube-system   kube-scheduler-centos1            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/1     Running   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("76m ago"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   26h\n\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);