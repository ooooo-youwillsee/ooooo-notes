(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{377:function(t,s,a){t.exports=a.p+"assets/img/03_01.e6553867.png"},378:function(t,s,a){t.exports=a.p+"assets/img/03_02.97e0a355.png"},379:function(t,s,a){t.exports=a.p+"assets/img/03_03.c1e93e30.png"},461:function(t,s,a){"use strict";a.r(s);var _=a(25),v=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"_1、事务隔离级别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、事务隔离级别"}},[t._v("#")]),t._v(" 1、事务隔离级别")]),t._v(" "),_("blockquote",[_("p",[t._v("事务的 "),_("strong",[t._v("ACID")]),t._v(" 中的 "),_("strong",[t._v("I")]),t._v(" 指的就是隔离性（Isolation）。")])]),t._v(" "),_("h3",{attrs:{id:"_1、隔离级别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_1、隔离级别"}},[t._v("#")]),t._v(" 1、隔离级别")]),t._v(" "),_("p",[_("strong",[t._v("读未提交")]),t._v("（read-uncommitted）：一个事务还没提交时，它做的变更就能被别的事务看到。")]),t._v(" "),_("p",[_("strong",[t._v("读提交")]),t._v("（read-committed）：一个事务提交之后，它做的变更才会被其他事务看到。")]),t._v(" "),_("p",[_("strong",[t._v("可重复读")]),t._v("（repeatable-read）：一个事务执行过程中看到的数据，总是跟这个事务在启动时看到的数据是一致的。")]),t._v(" "),_("p",[_("strong",[t._v("串行化")]),t._v("（serializable）：当出现读写锁冲突的时候，后执行事务必须等前一个事务执行完成，才能继续执行。")]),t._v(" "),_("p",[t._v('MySQL 的隔离级别设置为"读提交"。')]),t._v(" "),_("h3",{attrs:{id:"_2、事务隔离例子"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、事务隔离例子"}},[t._v("#")]),t._v(" 2、事务隔离例子")]),t._v(" "),_("div",{staticClass:"language-shell script extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[t._v("mysql"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" create table T"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c int"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("engine")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("InnoDB"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ninsert into T"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("c"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" values"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),_("p",[_("img",{attrs:{src:a(377),alt:"事务隔离例子"}})]),t._v(" "),_("p",[t._v("在不同的隔离级别下的结果：")]),t._v(" "),_("ol",[_("li",[_("p",[t._v("隔离级别为"),_("strong",[t._v("读未提交")]),t._v("，v1 = 2, v2 = 2, v3 = 2。")])]),t._v(" "),_("li",[_("p",[t._v("隔离级别为"),_("strong",[t._v("读提交")]),t._v("，v1 = 1, v2 = 2, v3 = 2。")])]),t._v(" "),_("li",[_("p",[t._v("隔离级别为"),_("strong",[t._v("可重复读")]),t._v("，v1 = 1, v2 = 1, v3 = 2。")])]),t._v(" "),_("li",[_("p",[t._v("隔离级别为"),_("strong",[t._v("串行化")]),t._v("，v1 = 1, v2 = 1, v3 = 2。")])])]),t._v(" "),_("p",[t._v("在实现上，数据库里面会创建一个视图，访问的时候以视图的逻辑结果为准。")]),t._v(" "),_("p",[t._v("在"),_("strong",[t._v("可重复读")]),t._v("隔离级别下，这个视图是在事务启动时创建的，整个事务存在期间都用这个视图。")]),t._v(" "),_("p",[t._v("在"),_("strong",[t._v("读提交")]),t._v("隔离级别下，这个视图是在每个SQL语句开始执行的时候创建的。")]),t._v(" "),_("p",[t._v("在"),_("strong",[t._v("读未提交")]),t._v("隔离级别下，直接返回记录上的最新值，没有视图概念。")]),t._v(" "),_("p",[t._v("在"),_("strong",[t._v("串行化")]),t._v("隔离级别下，直接用加锁的方式来避免并行访问。")]),t._v(" "),_("h3",{attrs:{id:"_3、事务配置方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、事务配置方式"}},[t._v("#")]),t._v(" 3、事务配置方式")]),t._v(" "),_("p",[t._v("通过命令 "),_("code",[t._v("show variables like 'transaction_isolation';")]),t._v(" 来查看当前隔离级别。通过命令 "),_("code",[t._v("set transaction_isolation = 'read-committed';")]),t._v(" 来设置隔离级别。")]),t._v(" "),_("p",[_("img",{attrs:{src:a(378),alt:"事务配置方式"}})]),t._v(" "),_("h2",{attrs:{id:"_2、事务隔离的实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_2、事务隔离的实现"}},[t._v("#")]),t._v(" 2、事务隔离的实现")]),t._v(" "),_("p",[t._v("在 MySQL 中，实际上每条记录在更新的时候都会同时记录一条回滚操作。记录上的最新值，通过回滚操作，都可以得到前一个状态的值。")]),t._v(" "),_("p",[t._v("假设一个值从 1 被按顺序改成了 2、3、4，在回滚日志里面就会有类似下面的记录。")]),t._v(" "),_("p",[_("img",{attrs:{src:a(379),alt:"回滚日志示例"}})]),t._v(" "),_("p",[_("strong",[t._v("长事务意味着系统里面会存在很老的事务视图")]),t._v("。由于这些事务随时可能访问数据库里面的任何数据，所以这个事务提交之前，数据库里面它可能用到的回滚记录都必须保留，这就会导致大量占用存储空间。长事务还占用锁资源，也可能拖垮整个库。")]),t._v(" "),_("h2",{attrs:{id:"_3、事务的启动方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_3、事务的启动方式"}},[t._v("#")]),t._v(" 3、事务的启动方式")]),t._v(" "),_("p",[t._v("建议你总是使用 "),_("code",[t._v("set autocommit = 1")]),t._v(", 通过显式语句的方式来启动事务。")]),t._v(" "),_("p",[t._v("在 autocommit = 1 的情况下，用 begin 显式启动的事务，如果执行 commit 则提交事务。如果执行 commit work and chain，则是提交事务并自动启动下一个事务。")]),t._v(" "),_("p",[t._v("你可以在 information_schema 库的 innodb_trx 这个表中查询长事务，比如下面这个语句，用于查找持续时间超过 60s 的事务。")]),t._v(" "),_("div",{staticClass:"language-shell script extra-class"},[_("pre",{pre:!0,attrs:{class:"language-shell"}},[_("code",[t._v("mysql"),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" * from information_schema.innodb_trx where TIME_TO_SEC"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("timediff"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("now"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(",trx_started"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("))")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("60")]),t._v("\n")])])]),_("h2",{attrs:{id:"_4、问题"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#_4、问题"}},[t._v("#")]),t._v(" 4、问题")]),t._v(" "),_("p",[t._v("怎样避免长事务？")]),t._v(" "),_("p",[t._v("在开发端：")]),t._v(" "),_("ol",[_("li",[t._v("设置"),_("code",[t._v("set autocommit = 0")]),t._v("。")]),t._v(" "),_("li",[t._v("确认是否有不必要的只读事务。")]),t._v(" "),_("li",[t._v("通过 "),_("code",[t._v("SET MAX_EXECUTION_TIME")]),t._v(" 命令，来控制每个语句执行的最长时间，避免单个语句意外执行太长时间。")])]),t._v(" "),_("p",[t._v("在数据库端：")]),t._v(" "),_("ol",[_("li",[t._v("控 information_schema.Innodb_trx 表，设置长事务阈值，超过就报警/或者 kill。")]),t._v(" "),_("li",[t._v("ercona 的 pt-kill 这个工具不错，推荐使用。")]),t._v(" "),_("li",[t._v("在业务功能测试阶段要求输出所有的 general_log，分析日志行为提前发现问题。")]),t._v(" "),_("li",[t._v("如果使用的是MySQL 5.6或者更新版本，把 innodb_undo_tablespaces 设置成2（或更大的值）。如果真的出现大事务导致回滚段过大，这样设置后清理起来更方便。")])])])}),[],!1,null,null,null);s.default=v.exports}}]);