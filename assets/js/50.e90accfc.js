(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{413:function(a,t,e){"use strict";e.r(t);var r=e(18),v=Object(r.a)({},(function(){var a=this,t=a.$createElement,e=a._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[e("h2",{attrs:{id:"_1、kafka-的版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1、kafka-的版本"}},[a._v("#")]),a._v(" 1、Kafka 的版本")]),a._v(" "),e("blockquote",[e("p",[a._v("[scala-version] - [kafka-version].tar.gz")])]),a._v(" "),e("ul",[e("li",[e("code",[a._v("0.10.0.0")]),a._v(" "),e("strong",[a._v("引进 Kafka Stream")])]),a._v(" "),e("li",[e("code",[a._v("0.11.0.0")]),a._v(" "),e("strong",[a._v("添加幂等性 Producer 和事务 API，并对 Kafka 消息格式进行重构")])])]),a._v(" "),e("p",[a._v("总结：")]),a._v(" "),e("p",[a._v("如果只使用 Kafka 的消息引擎功能， 最少 "),e("code",[a._v("0.10.2.2")]),a._v("， 可以使用新版的 Consumer API。")]),a._v(" "),e("p",[a._v("如果使用 Kafka Stream，最少 "),e("code",[a._v("2.0.0")]),a._v("。")])])}),[],!1,null,null,null);t.default=v.exports}}]);