<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>随笔 - Category - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/categories/%E9%9A%8F%E7%AC%94/</link><description>随笔 - Category - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Sat, 18 Mar 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/categories/%E9%9A%8F%E7%AC%94/" rel="self" type="application/rss+xml"/><item><title>goland 打开 go 项目一直 loading</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/goland-%E6%89%93%E5%BC%80-go-%E9%A1%B9%E7%9B%AE%E4%B8%80%E7%9B%B4-loading/</link><pubDate>Sat, 18 Mar 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/goland-%E6%89%93%E5%BC%80-go-%E9%A1%B9%E7%9B%AE%E4%B8%80%E7%9B%B4-loading/</guid><description>1. go list all 一直加载 go list all 命令需要发送请求，导致连接超时。 goland 配置代理</description></item><item><title>ubuntu 打不开终端</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/ubuntu-%E6%89%93%E4%B8%8D%E5%BC%80%E7%BB%88%E7%AB%AF/</link><pubDate>Fri, 17 Mar 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/ubuntu-%E6%89%93%E4%B8%8D%E5%BC%80%E7%BB%88%E7%AB%AF/</guid><description>1. 解决方法 设置区域和语言 ![设置区域和语言]((https://ooooo-notes.ooooo-youwillsee.com/stati</description></item><item><title>h2 数据库使用</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/h2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</link><pubDate>Wed, 15 Mar 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/h2-%E6%95%B0%E6%8D%AE%E5%BA%93%E4%BD%BF%E7%94%A8/</guid><description><![CDATA[怎么使用 h2 数据库。 1. 引入依赖 1 2 3 4 dependencies { api(&#39;p6spy:p6spy&#39;) api(&#39;com.h2database:h2&#39;) } 2. 以内存的方式使用 1 2 3 4 5 # spring boot 配置 spring: datasource: driverClassName: com.p6spy.engine.spy.P6SpyDriver url: jdbc:p6spy:h2:mem:test;DB_CLOSE_DELAY=1000 3. 以进程的方式使用 1 2 3 4 5 6 7 8 # 启动 h2 数]]></description></item><item><title>linux 中的 cgroup 机制</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/linux-%E4%B8%AD%E7%9A%84-cgroup-%E6%9C%BA%E5%88%B6/</link><pubDate>Sun, 29 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/linux-%E4%B8%AD%E7%9A%84-cgroup-%E6%9C%BA%E5%88%B6/</guid><description>1. 检查 cgroup 的版本 1 2 3 4 5 # check if cgroup is supported cat /proc/filesystems | grep cgroup # check cgroup version cat /proc/mounts | grep cgroup 2. cgroup v2 操作 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 # create new dir cd /sys/fs/cgroup mkdir</description></item><item><title>mysql 间隙锁</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/mysql-%E9%97%B4%E9%9A%99%E9%94%81/</link><pubDate>Sat, 28 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/mysql-%E9%97%B4%E9%9A%99%E9%94%81/</guid><description>1. 准备数据 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # create new schema create schema test; use test; # create table test create table user ( id int primary key, age int ); alter table user add index age_idx (age); # insert some test data insert into user values (3, 10), (5, 20), (8,</description></item><item><title>docker 存储驱动</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%AD%98%E5%82%A8%E9%A9%B1%E5%8A%A8/</link><pubDate>Tue, 24 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%AD%98%E5%82%A8%E9%A9%B1%E5%8A%A8/</guid><description>1. aufs 存储驱动 Ubuntu 22.04 LTS 不支持 aufs 文件系统 参考： ubuntu官方文档 2. overlay2 存储驱动 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # creat dir mkdir lower upper work mnt # mount lower upper work to mnt mount -t overlay -o</description></item><item><title>docker 单主机网络</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%8D%95%E4%B8%BB%E6%9C%BA%E7%BD%91%E8%B7%AF/</link><pubDate>Fri, 20 Jan 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/docker-%E5%8D%95%E4%B8%BB%E6%9C%BA%E7%BD%91%E8%B7%AF/</guid><description>这篇文章主要简述 docker 中的 bridge 网络驱动是如何工作的。 1. 测试一，veth1 (ns1) &amp;mdash; veth2 (ns2) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 # create ns1,</description></item><item><title>搭建 istio 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-istio-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Mon, 19 Dec 2022 09:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-istio-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>1. 前置条件 安装 docker，必须配置 docker 代理，否则 build 失败。 参考 下载 istio 源码。 安装 go 和 dlv 工具。参考 2. 设置环境变量 1 2 3 4 5 6 7 8 # docker 地址 export HUB=&amp;#34;docker.io/youwillsee&amp;#34; # istio 的</description></item><item><title>设置 docker 代理</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</link><pubDate>Sun, 18 Dec 2022 09:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E8%AE%BE%E7%BD%AE-docker-%E4%BB%A3%E7%90%86/</guid><description><![CDATA[1. 配置 docker 代理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # 创建配置目录 mkdir -p /etc/systemd/system/docker.service.d # 创建配置文件 vim /etc/systemd/system/docker.service.d/http-proxy.conf # 配置文件内容 [Service] Environment=&#34;HTTP_PROXY=http://ooooo:10800&#34; Environment=&#34;HTTPS_PROXY=http://ooooo:10800&#34; # 重启 docker systemctl daemon-reload &amp;&amp; systemctl restart docker # 查看配置是否生效]]></description></item><item><title>搭建 tomcat 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-tomcat-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Wed, 10 Aug 2022 18:32:22 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-tomcat-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>1. 下载代码 1 git clone git@github.com:apache/tomcat.git 2. 安装ant 我本地安装的是 1.10.12 版本, ant 下载地址 配置环境变量 ANT_HOME, 加入到 PATH 环境变量中 执行命令验证 ant -version 3. 导入到 idea 中 1 2 3 4 5 6 7 8 9</description></item></channel></rss>