<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>随笔 - Category - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/categories/%E9%9A%8F%E7%AC%94/</link><description>随笔 - Category - 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Tue, 07 Nov 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/categories/%E9%9A%8F%E7%AC%94/" rel="self" type="application/rss+xml"/><item><title>mybatis-plus 更新字段为 null 的坑</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E4%B8%BA-null-%E7%9A%84%E5%9D%91/</link><pubDate>Tue, 07 Nov 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E4%B8%BA-null-%E7%9A%84%E5%9D%91/</guid><description>字段更新为null的代码 1 2 3 4 5 6 7 8 9 // 实体类字段设置 @TableField(value = &amp;#34;LOCK_EXP_TIME_&amp;#34;, updateStrategy = FieldStrategy.IGNORED) private Date lockExpirationTime; // mapper操作 JobEntity jobEntity = new JobEntity(); jobEntity.setId(1); jobEntity.setLockExpirationTime(null); JobEntityMapper.updateById(jobEntity); 问题 上面的操作可能会抛出下面的</description></item><item><title>简单封装 thrift 协议</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85-thrift-%E5%8D%8F%E8%AE%AE/</link><pubDate>Wed, 13 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%AE%80%E5%8D%95%E5%B0%81%E8%A3%85-thrift-%E5%8D%8F%E8%AE%AE/</guid><description><![CDATA[build.gradle 文件 1 2 3 4 5 6 7 8 9 10 11 plugins { id(&#34;com.linecorp.thrift-gradle-plugin&#34;) version &#34;0.5.0&#34; } dependencies { api(&#39;org.apache.thrift:libthrift:0.19.0&#39;) api(&#39;org.springframework.boot:spring-boot-starter-logging&#39;) api(&#39;cn.hutool:hutool-all&#39;) testImplementation(&#39;org.springframework.boot:spring-boot-starter-test&#39;) } example.thrift 文件 文件放在路径: src/main/thrift, 运行 gradle 命令 compileThrift 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26]]></description></item><item><title>raft 协议重新设置 ip</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/raft-%E5%8D%8F%E8%AE%AE%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AE-ip/</link><pubDate>Fri, 08 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/raft-%E5%8D%8F%E8%AE%AE%E9%87%8D%E6%96%B0%E8%AE%BE%E7%BD%AE-ip/</guid><description>raft 节点在机器ip变动之后，可能出现选主不成功的问题。 解决方法 下面是 nacos 的 JRaft 解决方法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30</description></item><item><title>github 上使用 goreleaser</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/github-%E4%B8%8A%E4%BD%BF%E7%94%A8-goreleaser/</link><pubDate>Tue, 01 Aug 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/github-%E4%B8%8A%E4%BD%BF%E7%94%A8-goreleaser/</guid><description>1. goreleaser 的简单说明 1 2 3 4 5 6 7 8 9 # install goreleaser brew install goreleaser # init goreleaser, create .goreleaser.yml goreleaser init # available commands goreleaser build --clean goreleaser release --snapshot --clean 2. .goreleaser.yml 示例文件 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25</description></item><item><title>kafka 的 SASL 认证</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/kafka-%E7%9A%84-sasl-%E8%AE%A4%E8%AF%81/</link><pubDate>Tue, 01 Aug 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/kafka-%E7%9A%84-sasl-%E8%AE%A4%E8%AF%81/</guid><description><![CDATA[1. 搭建 kafka 环境 这里使用 docker 来搭建。 docker-compose.yml 配置如下，客户端端口:9094 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 version: &#34;3&#34; services: kafka: image: &#39;bitnami/kafka:latest&#39; ports: - &#39;9092:9092&#39; - &#39;9094:9094&#39; environment: - KAFKA_CFG_NODE_ID=0 - KAFKA_CFG_PROCESS_ROLES=controller,broker - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094 - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094 -]]></description></item><item><title>protocols</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/protocols/</link><pubDate>Mon, 31 Jul 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/protocols/</guid><description>websocket</description></item><item><title>使用 netty 的注意点</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BD%BF%E7%94%A8-netty-%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</link><pubDate>Sun, 30 Jul 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BD%BF%E7%94%A8-netty-%E7%9A%84%E6%B3%A8%E6%84%8F%E7%82%B9/</guid><description>1. HttpHelloWorldServerHandler 为啥需要使用 SimpleChannelInboundHandler ? HttpObject 的子类有 LastHttpContent, HttpContent, HttpData， 它需要手动调用 release()。</description></item><item><title>rocketmq 的 LitePullConsumer 使用</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rocketmq-%E7%9A%84-litepullconsumer-%E4%BD%BF%E7%94%A8/</link><pubDate>Fri, 07 Jul 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rocketmq-%E7%9A%84-litepullconsumer-%E4%BD%BF%E7%94%A8/</guid><description>1. 代码 在自定义封装 MQ 时，要注意 producer 和 consumer 的初始化时机，否则会出现 consumer 占用 consumerQueue 的情况 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33</description></item><item><title>dubbo3 多注册中心的小 bug</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/dubbo3-%E5%A4%9A%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%9A%84%E5%B0%8Fbug/</link><pubDate>Mon, 03 Jul 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/dubbo3-%E5%A4%9A%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83%E7%9A%84%E5%B0%8Fbug/</guid><description>1. 配置 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 dubbo: application: parameters: registry-type: service registries: a: address: nacos://172.16.1.104:7848 group: DUBBO_SERVICE_GROUP parameters: namespace: a b: address: nacos://172.16.1.104:7848 group: DUBBO_SERVICE_GROUP parameters: namespace: b 2. 问题 只会注册到一个 namespace 中 3. github dubbo issue</description></item><item><title>mybatis-plus 的自定义 mapper</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89-mapper/</link><pubDate>Thu, 08 Jun 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E7%9A%84%E8%87%AA%E5%AE%9A%E4%B9%89-mapper/</guid><description>1. 问题 在真实的使用过程中，可能不同的 mapper 接口使用的 sqlSessionFactory 不一样。就比如下面这个例子。 1 2 3 4 5 6 7 8 9 // 这个注解虽然可以指定 sqlSessionFactory, 但是最终使用的 configuration 对象</description></item></channel></rss>