<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>源码分析 Netty 系列 - 合集 - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/collections/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-netty-%E7%B3%BB%E5%88%97/</link><description>源码分析 Netty 系列 - 合集 | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (线偶)</managingEditor><webMaster>297872913@qq.com (线偶)</webMaster><lastBuildDate>Tue, 22 Aug 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/collections/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-netty-%E7%B3%BB%E5%88%97/" rel="self" type="application/rss+xml"/><item><title>时间轮算法</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%97%B6%E9%97%B4%E8%BD%AE%E7%AE%97%E6%B3%95/</link><pubDate>Tue, 22 Aug 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%97%B6%E9%97%B4%E8%BD%AE%E7%AE%97%E6%B3%95/</guid><description>时间轮的用法 1 2 3 4 5 6 7 8 9 // 默认间隔时间为 100 毫秒 Timer timer = new HashedWheelTimer(); Timeout timeout = timer.newTimeout(new TimerTask() { @Override public void run(Timeout timeout) throws Exception { System.out.println(&amp;#34;run&amp;#34;); } }, 10, TimeUnit.SECONDS); timer.stop(); 时间轮的原理 有一个环形数组，每个格子都</description></item></channel></rss>