<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>随笔 - 合集 - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/collections/%E9%9A%8F%E7%AC%94/</link><description>随笔 - 合集 | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (线偶)</managingEditor><webMaster>297872913@qq.com (线偶)</webMaster><lastBuildDate>Mon, 10 Jun 2024 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/collections/%E9%9A%8F%E7%AC%94/" rel="self" type="application/rss+xml"/><item><title>rust axum 测试类</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rust-axum-%E6%B5%8B%E8%AF%95%E7%B1%BB/</link><pubDate>Mon, 10 Jun 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rust-axum-%E6%B5%8B%E8%AF%95%E7%B1%BB/</guid><description><![CDATA[multipart 测试类 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 const BOUNDARY: &amp;str = &#34;BOUNDARY&#34;; #[tokio::test] async fn test_import_proc_def() -&gt; anyhow::Result&lt;()&gt; { let bytes = fs::read(&#34;./examples/test01.xml&#34;).await?; let request = Request::builder() .header( CONTENT_TYPE, format!(&#34;multipart/form-data; boundary={}&#34;, BOUNDARY), ) .body::&lt;Body&gt;(generate_multipart_data(&#34;file&#34;, &amp;bytes)?.into()) .unwrap(); let multipart = Multipart::from_request(request, &amp;State(())).await?;]]></description></item><item><title>rust openssl 依赖</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rust-openssl-%E4%BE%9D%E8%B5%96/</link><pubDate>Sun, 09 Jun 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rust-openssl-%E4%BE%9D%E8%B5%96/</guid><description>在 window 上使用 openssl, 会遇到错误 failed to run custom build command for openssl-sys v0.9.102. 解决方法 下载 vcpkg, 打开 powershell 执行 ./bootstrap-vcpkg.bat 执行 ./vcpkg.exe install openssl:x64-windows-static 配置环境变量 OPENSSL_DIR=C:\Users\ooooo\Development\Vcpkg\installed\x64-windows-static 重新启动项目编译 参考 stackoverflow github</description></item><item><title>rust 常用依赖库</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rust-%E5%B8%B8%E7%94%A8%E4%BE%9D%E8%B5%96%E5%BA%93/</link><pubDate>Sat, 01 Jun 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rust-%E5%B8%B8%E7%94%A8%E4%BE%9D%E8%B5%96%E5%BA%93/</guid><description>介绍常用的依赖库，持续更新&amp;hellip; async_trait: 异步支持 once_cell: OnceCell 和 Lazy clap: 命令行支持 axum: http 服务 tokio: 异步运行时 serde: 序列化 serde_json: json 序列化 log: 日志门面 env_logger: 日志实现 anyhow: Result chrono: 日期</description></item><item><title>rust 镜像配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/rust-%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 24 May 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/rust-%E9%95%9C%E5%83%8F%E9%85%8D%E7%BD%AE/</guid><description>解决 rust 依赖加载太慢的问题。 配置文件 文件路径：用户名/.cargo/config.toml 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26</description></item><item><title>常见的限流算法</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%B8%B8%E8%A7%81%E7%9A%84%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/</link><pubDate>Fri, 12 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%B8%B8%E8%A7%81%E7%9A%84%E9%99%90%E6%B5%81%E7%AE%97%E6%B3%95/</guid><description>固定窗口算法 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 type FixedWindowRateLimiter struct { // 固定窗口大小, 单位ms windowInterval time.Duration // 限制 limit int // 窗口开始时间 prevTime time.Time // 当前限制 curLimit int } func (s *FixedWindowRateLimiter) acquire()</description></item><item><title>简单实现 gossip 协议</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0-gossip-%E5%8D%8F%E8%AE%AE/</link><pubDate>Fri, 12 Apr 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0-gossip-%E5%8D%8F%E8%AE%AE/</guid><description>gossip 协议是为实现最终一致性提出的。 实现思路 每个节点都有基本属性，如 id, addr, port。 每个节点都有成员列表 members，存储一部分数据 data。 通</description></item><item><title>时间轮和线程池实现任务执行器</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%97%B6%E9%97%B4%E8%BD%AE%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E7%8E%B0%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E5%99%A8/</link><pubDate>Sun, 24 Mar 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%97%B6%E9%97%B4%E8%BD%AE%E5%92%8C%E7%BA%BF%E7%A8%8B%E6%B1%A0%E5%AE%9E%E7%8E%B0%E4%BB%BB%E5%8A%A1%E6%89%A7%E8%A1%8C%E5%99%A8/</guid><description>java 的线程池可以充当一个任务执行器的，但是有时候不符合我们的要求，所以需要自定义开发。 满足1：可以根据任务数量来动态调整核心线程数和最大线程数</description></item><item><title>实现一个软引用缓存</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%BD%AF%E5%BC%95%E7%94%A8%E7%BC%93%E5%AD%98/</link><pubDate>Wed, 20 Mar 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E5%AE%9E%E7%8E%B0%E4%B8%80%E4%B8%AA%E8%BD%AF%E5%BC%95%E7%94%A8%E7%BC%93%E5%AD%98/</guid><description>在 java 中有四种引用类型，分为强引用，软引用，弱引用，虚引用，这里介绍如何使用软引用来实现一个缓存。 实现代码 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item><item><title>缓存一致性问题</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98/</link><pubDate>Sun, 07 Jan 2024 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E7%BC%93%E5%AD%98%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98/</guid><description>当我们使用缓存时，必定会遇到缓存一致性问题，也就是在读写请求过程中数据库和缓存中的数据不一致。 下面将分析为什么会造成不一致, 所有的代码参考末</description></item><item><title>mybatis-plus 更新字段为 null 的坑</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E4%B8%BA-null-%E7%9A%84%E5%9D%91/</link><pubDate>Tue, 07 Nov 2023 08:00:00 +0800</pubDate><author>线偶</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/mybatis-plus-%E6%9B%B4%E6%96%B0%E5%AD%97%E6%AE%B5%E4%B8%BA-null-%E7%9A%84%E5%9D%91/</guid><description>字段更新为null的代码 1 2 3 4 5 6 7 8 9 // 实体类字段设置 @TableField(value = &amp;#34;LOCK_EXP_TIME_&amp;#34;, updateStrategy = FieldStrategy.IGNORED) private Date lockExpirationTime; // mapper操作 JobEntity jobEntity = new JobEntity(); jobEntity.setId(1); jobEntity.setLockExpirationTime(null); JobEntityMapper.updateById(jobEntity); 问题 上面的操作可能会抛出下面的</description></item></channel></rss>