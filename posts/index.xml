<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>All Posts - 线偶的IT笔记</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/posts/</link><description>All Posts | 线偶的IT笔记</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>297872913@qq.com (ooooo-youwillsee)</managingEditor><webMaster>297872913@qq.com (ooooo-youwillsee)</webMaster><lastBuildDate>Tue, 10 Oct 2023 08:00:00 +0800</lastBuildDate><atom:link href="https://ooooo-youwillsee.github.io/ooooo-notes/posts/" rel="self" type="application/rss+xml"/><item><title>源码分析 activiti 部署流程</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</link><pubDate>Tue, 10 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B/</guid><description>activiti 基于 8.0.0 版本 部署流程 源码位置: org.activiti.engine.impl.repository.DeploymentBuilderImpl#deploy 1 2 3 4 5 6 7 8 9 10 // 部署流程 public Deployment deploy() { return repositoryService.deploy(this); } // org.activiti.engine.impl.RepositoryServiceImpl#deploy public Deployment deploy(DeploymentBuilderImpl deploymentBuilder) { // 执行 DeployCmd, 最终会执行 DeployCmd#execute 方法 return commandExecutor.execute(new DeployCmd&amp;lt;Deployment&amp;gt;(deploymentBuilder)); } 源码位置: org.activiti.engine.impl.cmd.DeployCmd#execute 1 2 3</description></item><item><title>源码分析 activiti 集成 spring</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%9B%86%E6%88%90-spring/</link><pubDate>Mon, 09 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-activiti-%E9%9B%86%E6%88%90-spring/</guid><description>activiti 基于 8.0.0 版本 在大多数情况下，activiti 都会与 spring boot 框架一起使用，所以这一节就来介绍 activiti 是如何集成 spring 的。 activitiProperties 配置 配置类: org.activiti.spring.boot.ActivitiProperties java 1 2 3 4 5 6 7 8 9</description></item><item><title>从零学 levelDB</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BB%8E%E9%9B%B6%E5%AD%A6-leveldb/</link><pubDate>Sun, 08 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E4%BB%8E%E9%9B%B6%E5%AD%A6-leveldb/</guid><description>为什么学 如果你要了解存储方面的知识，levelDB 你必须要懂。这是因为存储会涉及到LSM 树和B+ 树，而 levelDB 是LSM 树的实现。现在的单机存储引擎</description></item><item><title>搭建 activiti 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-activiti-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Sun, 08 Oct 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-activiti-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>activiti 基于 8.0.0 版本 下载源码和编译 1 2 3 git clone git@github.com:Activiti/Activiti.git mvn clean package -DskipTests 运行示例程序 在源码中有模块 activiti-examples/activiti-api-bas</description></item><item><title>源码分析 dubbo 配置加载</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD/</link><pubDate>Thu, 28 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-%E9%85%8D%E7%BD%AE%E5%8A%A0%E8%BD%BD/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中支持配置中心，如果没有配置，则会检查注册中心能否当作配置中心。 启动配置中心 源码位置: org.apache.dubbo.config.deploy.DefaultApplicationDeployer#startConfigCenter 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18</description></item><item><title>源码分析 dubbo 启动流程</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</link><pubDate>Sat, 16 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-%E5%90%AF%E5%8A%A8%E6%B5%81%E7%A8%8B/</guid><description>dubbo 基于 3.2.6 版本 入口程序 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // registry、protocol、reference、service 都会调用 config</description></item><item><title>源码分析 nacos client 获取配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-client-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</link><pubDate>Sat, 16 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-client-%E8%8E%B7%E5%8F%96%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 这里的 client 是指 nacos SDK，也就是模块 nacos-client. 获取配置 源码位置: com.alibaba.nacos.client.config.NacosConfigService#getConfig 1 2 3 4 5 // 获取配置 @Override public String getConfig(String dataId, String group, long timeoutMs) throws NacosException { return getConfigInner(namespace, dataId, group, timeoutMs); } 源码位置: com.alibaba.nacos.client.config.NacosConfigService#getConfigInner 1 2 3</description></item><item><title>源码分析 dubbo ExtensionLoader</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-extensionloader/</link><pubDate>Fri, 15 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-dubbo-extensionloader/</guid><description>dubbo 基于 3.2.6 版本 在 dubbo 中，ExtensionLoader 是很重要的类，实现了 dubbo 的扩展机制，主要有三个方法，getExtension、getActi</description></item><item><title>源码分析 nacos client 订阅配置</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-client-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</link><pubDate>Fri, 15 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-nacos-client-%E8%AE%A2%E9%98%85%E9%85%8D%E7%BD%AE/</guid><description>nacos 基于 2.2.4 版本 这里的 client 是指 nacos SDK，也就是模块 nacos-client. 添加订阅者 源码位置: com.alibaba.nacos.client.config.NacosConfigService#addListener 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // 添加监听器 @Override public void addListener(String</description></item><item><title>搭建 dubbo 源码调试环境</title><link>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-dubbo-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</link><pubDate>Thu, 14 Sep 2023 08:00:00 +0800</pubDate><author>ooooo-youwillsee</author><guid>https://ooooo-youwillsee.github.io/ooooo-notes/%E6%90%AD%E5%BB%BA-dubbo-%E6%BA%90%E7%A0%81%E8%B0%83%E8%AF%95%E7%8E%AF%E5%A2%83/</guid><description>dubbo 基于 3.2.6 版本 源码分析，主要介绍服务级别的注册和发现，所以我们需要设置下参数来启用。 选取 dubbo-demo-api 模块作为示例。 provider 示例程序 1 2 3 4 5 6 7 8 9 10 11 12 13 14</description></item></channel></rss>